{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/hr/components/layout/OrgChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../../contexts/AuthContext';\nimport { fetchEmployees } from '../../../../services/employeesService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction buildTree(employees) {\n  const map = {};\n  employees.forEach(emp => map[emp.id] = {\n    ...emp,\n    children: []\n  });\n  const roots = [];\n  employees.forEach(emp => {\n    if (emp.manager_id && map[emp.manager_id]) {\n      map[emp.manager_id].children.push(map[emp.id]);\n    } else {\n      roots.push(map[emp.id]);\n    }\n  });\n  return roots;\n}\n\n// Helper to find the path from the root to the selected person (by id)\nconst findReportingPath = (node, selectedId) => {\n  if (node.id === selectedId) {\n    return [node.id];\n  }\n  if (node.children) {\n    for (const child of node.children) {\n      const path = findReportingPath(child, selectedId);\n      if (path) {\n        return [node.id, ...path];\n      }\n    }\n  }\n  return null;\n};\nconst MemberNode = ({\n  member,\n  isRoot = false,\n  onSelect,\n  selectedId,\n  reportingPath\n}) => {\n  var _member$children;\n  const isSelected = member.id === selectedId;\n  const isInPath = reportingPath.includes(member.id);\n  const hasChildInPath = (_member$children = member.children) === null || _member$children === void 0 ? void 0 : _member$children.some(c => reportingPath.includes(c.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative flex flex-col items-center ${isRoot ? '' : 'pt-8'}`,\n    children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-0 left-1/2 -translate-x-1/2 w-px h-8 ${isInPath ? 'bg-purple-500' : 'bg-gray-300'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelect(member.id),\n      className: `relative block text-left bg-white border ${isSelected ? 'border-purple-500 ring-2 ring-purple-200' : 'border-gray-300'} rounded-md shadow-sm p-2 w-44 z-10 hover:border-purple-400 transition-all duration-150`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-bold text-gray-900 text-center\",\n        children: member.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-purple-600 font-semibold text-center\",\n        children: member.position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 text-center mt-1\",\n        children: member.department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), member.children && member.children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute top-full w-px h-8 ${hasChildInPath ? 'bg-purple-500' : 'bg-gray-300'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-8 relative\",\n        children: [member.children.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute top-0 left-0 right-0 h-px ${hasChildInPath ? 'bg-purple-500' : 'bg-gray-300'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), member.children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-2\",\n          children: /*#__PURE__*/_jsxDEV(MemberNode, {\n            member: child,\n            onSelect: onSelect,\n            selectedId: selectedId,\n            reportingPath: reportingPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, child.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = MemberNode;\nconst OrgChart = () => {\n  _s();\n  const {\n    currentOrganization\n  } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedId, setSelectedId] = useState(null);\n  useEffect(() => {\n    if (!currentOrganization) return;\n    setLoading(true);\n    fetchEmployees(currentOrganization.organization_id).then(setEmployees).catch(setError).finally(() => setLoading(false));\n  }, [currentOrganization]);\n  if (!currentOrganization) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Select an organization\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 36\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading org chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500\",\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, this);\n  const tree = buildTree(employees);\n  // Find reporting path for highlighting\n  let reportingPath = [];\n  if (selectedId && tree.length > 0) {\n    for (const root of tree) {\n      const path = findReportingPath(root, selectedId);\n      if (path) {\n        reportingPath = path;\n        break;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-auto p-8 bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-gray-900 text-center mb-8\",\n      children: \"Organization Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center min-w-max\",\n      children: tree.map(root => /*#__PURE__*/_jsxDEV(MemberNode, {\n        member: root,\n        isRoot: true,\n        onSelect: setSelectedId,\n        selectedId: selectedId,\n        reportingPath: reportingPath\n      }, root.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(OrgChart, \"doOoxmHYchIBVXf+VOiMEFcuKJc=\", false, function () {\n  return [useAuth];\n});\n_c2 = OrgChart;\nexport default OrgChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemberNode\");\n$RefreshReg$(_c2, \"OrgChart\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","fetchEmployees","jsxDEV","_jsxDEV","Fragment","_Fragment","buildTree","employees","map","forEach","emp","id","children","roots","manager_id","push","findReportingPath","node","selectedId","child","path","MemberNode","member","isRoot","onSelect","reportingPath","_member$children","isSelected","isInPath","includes","hasChildInPath","some","c","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","position","department","length","_c","OrgChart","_s","currentOrganization","setEmployees","loading","setLoading","error","setError","setSelectedId","organization_id","then","catch","finally","message","tree","root","_c2","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/hr/components/layout/OrgChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../../contexts/AuthContext';\nimport { fetchEmployees } from '../../../../services/employeesService';\n\nfunction buildTree(employees) {\n  const map = {};\n  employees.forEach(emp => (map[emp.id] = { ...emp, children: [] }));\n  const roots = [];\n  employees.forEach(emp => {\n    if (emp.manager_id && map[emp.manager_id]) {\n      map[emp.manager_id].children.push(map[emp.id]);\n    } else {\n      roots.push(map[emp.id]);\n    }\n  });\n  return roots;\n}\n\n// Helper to find the path from the root to the selected person (by id)\nconst findReportingPath = (node, selectedId) => {\n  if (node.id === selectedId) {\n    return [node.id];\n  }\n  if (node.children) {\n    for (const child of node.children) {\n      const path = findReportingPath(child, selectedId);\n      if (path) {\n        return [node.id, ...path];\n      }\n    }\n  }\n  return null;\n};\n\nconst MemberNode = ({ member, isRoot = false, onSelect, selectedId, reportingPath }) => {\n  const isSelected = member.id === selectedId;\n  const isInPath = reportingPath.includes(member.id);\n  const hasChildInPath = member.children?.some(c => reportingPath.includes(c.id));\n\n  return (\n    <div className={`relative flex flex-col items-center ${isRoot ? '' : 'pt-8'}`}>\n      {/* Connecting line from parent */}\n      {!isRoot && <div className={`absolute top-0 left-1/2 -translate-x-1/2 w-px h-8 ${isInPath ? 'bg-purple-500' : 'bg-gray-300'}`}></div>}\n      {/* Member Box */}\n      <button\n        onClick={() => onSelect(member.id)}\n        className={`relative block text-left bg-white border ${isSelected ? 'border-purple-500 ring-2 ring-purple-200' : 'border-gray-300'} rounded-md shadow-sm p-2 w-44 z-10 hover:border-purple-400 transition-all duration-150`}\n      >\n        <h3 className=\"text-sm font-bold text-gray-900 text-center\">{member.name}</h3>\n        <p className=\"text-xs text-purple-600 font-semibold text-center\">{member.position}</p>\n        <p className=\"text-xs text-gray-500 text-center mt-1\">{member.department}</p>\n      </button>\n      {/* Render children if they exist */}\n      {member.children && member.children.length > 0 && (\n        <>\n          {/* Vertical line connecting to children's horizontal bar */}\n          <div className={`absolute top-full w-px h-8 ${hasChildInPath ? 'bg-purple-500' : 'bg-gray-300'}`}></div>\n          <div className=\"flex justify-center mt-8 relative\">\n            {/* Horizontal connecting line - only if more than one child */}\n            {member.children.length > 1 && (\n              <div className={`absolute top-0 left-0 right-0 h-px ${hasChildInPath ? 'bg-purple-500' : 'bg-gray-300'}`}></div>\n            )}\n            {member.children.map((child) => (\n              <div key={child.id} className=\"px-2\">\n                <MemberNode\n                  member={child}\n                  onSelect={onSelect}\n                  selectedId={selectedId}\n                  reportingPath={reportingPath}\n                />\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst OrgChart = () => {\n  const { currentOrganization } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedId, setSelectedId] = useState(null);\n\n  useEffect(() => {\n    if (!currentOrganization) return;\n    setLoading(true);\n    fetchEmployees(currentOrganization.organization_id)\n      .then(setEmployees)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [currentOrganization]);\n\n  if (!currentOrganization) return <div>Select an organization</div>;\n  if (loading) return <div>Loading org chart...</div>;\n  if (error) return <div className=\"text-red-500\">Error: {error.message}</div>;\n\n  const tree = buildTree(employees);\n  // Find reporting path for highlighting\n  let reportingPath = [];\n  if (selectedId && tree.length > 0) {\n    for (const root of tree) {\n      const path = findReportingPath(root, selectedId);\n      if (path) {\n        reportingPath = path;\n        break;\n      }\n    }\n  }\n\n  return (\n    <div className=\"overflow-x-auto p-8 bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg\">\n      <h2 className=\"text-xl font-bold text-gray-900 text-center mb-8\">Organization Chart</h2>\n      <div className=\"flex justify-center min-w-max\">\n        {tree.map(root => (\n          <MemberNode\n            key={root.id}\n            member={root}\n            isRoot={true}\n            onSelect={setSelectedId}\n            selectedId={selectedId}\n            reportingPath={reportingPath}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OrgChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}