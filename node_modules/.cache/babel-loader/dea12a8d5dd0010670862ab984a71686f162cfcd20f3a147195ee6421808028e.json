{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/BalanceSheet.js\";\nimport React from 'react';\nimport Card from '../../../components/common/layout/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BalanceSheetSection = ({\n  title,\n  items,\n  total\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-lg font-medium text-gray-900 mb-3\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: [items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold\",\n        children: item.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between border-t pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-medium\",\n        children: [\"Total \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-lg\",\n        children: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = BalanceSheetSection;\nconst BalanceSheet = () => {\n  const assets = [{\n    label: 'Cash & Cash Equivalents',\n    amount: '$850,000'\n  }, {\n    label: 'Accounts Receivable',\n    amount: '$320,000'\n  }, {\n    label: 'Inventory',\n    amount: '$180,000'\n  }];\n  const liabilitiesAndEquity = [{\n    label: 'Accounts Payable',\n    amount: '$120,000'\n  }, {\n    label: 'Short-term Debt',\n    amount: '$200,000'\n  }, {\n    label: 'Retained Earnings',\n    amount: '$1,030,000'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(BalanceSheetSection, {\n        title: \"Assets\",\n        items: assets,\n        total: \"$1,350,000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BalanceSheetSection, {\n        title: \"Liabilities & Equity\",\n        items: liabilitiesAndEquity,\n        total: \"$1,350,000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c2 = BalanceSheet;\nexport default BalanceSheet;\nvar _c, _c2;\n$RefreshReg$(_c, \"BalanceSheetSection\");\n$RefreshReg$(_c2, \"BalanceSheet\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","BalanceSheetSection","title","items","total","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","label","amount","_c","BalanceSheet","assets","liabilitiesAndEquity","_c2","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/BalanceSheet.js"],"sourcesContent":["import React from 'react';\nimport Card from '../../../components/common/layout/Card';\n\nconst BalanceSheetSection = ({ title, items, total }) => (\n  <div>\n    <h3 className=\"text-lg font-medium text-gray-900 mb-3\">{title}</h3>\n    <div className=\"space-y-2\">\n      {items.map((item, index) => (\n        <div key={index} className=\"flex justify-between\">\n          <span>{item.label}</span>\n          <span className=\"font-semibold\">{item.amount}</span>\n        </div>\n      ))}\n      <div className=\"flex justify-between border-t pt-2\">\n        <span className=\"font-medium\">Total {title}</span>\n        <span className=\"font-semibold text-lg\">{total}</span>\n      </div>\n    </div>\n  </div>\n);\n\nconst BalanceSheet = () => {\n  const assets = [\n    { label: 'Cash & Cash Equivalents', amount: '$850,000' },\n    { label: 'Accounts Receivable', amount: '$320,000' },\n    { label: 'Inventory', amount: '$180,000' },\n  ];\n\n  const liabilitiesAndEquity = [\n    { label: 'Accounts Payable', amount: '$120,000' },\n    { label: 'Short-term Debt', amount: '$200,000' },\n    { label: 'Retained Earnings', amount: '$1,030,000' },\n  ];\n\n  return (\n    <Card>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <BalanceSheetSection\n          title=\"Assets\"\n          items={assets}\n          total=\"$1,350,000\"\n        />\n        <BalanceSheetSection\n          title=\"Liabilities & Equity\"\n          items={liabilitiesAndEquity}\n          total=\"$1,350,000\"\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default BalanceSheet; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}