{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/budget/Budget.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst initialRows = [{\n  id: 1,\n  type: 'revenue',\n  label: 'Product Sales',\n  values: [12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000]\n}, {\n  id: 2,\n  type: 'revenue',\n  label: 'Consulting',\n  values: [4000, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200]\n}, {\n  id: 3,\n  type: 'expense',\n  label: 'Salaries',\n  values: [-8000, -8200, -8300, -8400, -8500, -8600, -8700, -8800, -8900, -9000, -9100, -9200]\n}, {\n  id: 4,\n  type: 'expense',\n  label: 'Marketing',\n  values: [-2000, -2100, -2200, -2300, -2400, -2500, -2600, -2700, -2800, -2900, -3000, -3100]\n}];\nconst Budget = () => {\n  _s();\n  const [rows, setRows] = useState(initialRows);\n  const [newLabel, setNewLabel] = useState('');\n  const [newType, setNewType] = useState('revenue');\n  const handleValueChange = (rowIdx, monthIdx, value) => {\n    const updated = rows.map((row, i) => i === rowIdx ? {\n      ...row,\n      values: row.values.map((v, j) => j === monthIdx ? Number(value) : v)\n    } : row);\n    setRows(updated);\n  };\n  const handleAddRow = e => {\n    e.preventDefault();\n    if (!newLabel) return;\n    setRows([...rows, {\n      id: Date.now(),\n      type: newType,\n      label: newLabel,\n      values: Array(12).fill(0)\n    }]);\n    setNewLabel('');\n    setNewType('revenue');\n  };\n\n  // Calculate totals\n  const revenueRows = rows.filter(r => r.type === 'revenue');\n  const expenseRows = rows.filter(r => r.type === 'expense');\n  const revenueTotals = Array(12).fill(0);\n  const expenseTotals = Array(12).fill(0);\n  const profitLoss = Array(12).fill(0);\n  revenueRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      revenueTotals[i] += v;\n    });\n  });\n  expenseRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      expenseTotals[i] += v;\n    });\n  });\n  for (let i = 0; i < 12; i++) {\n    profitLoss[i] = revenueTotals[i] + expenseTotals[i];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow border border-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold text-gray-900\",\n        children: \"Budget (P&L by Month)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex gap-2 items-end\",\n        onSubmit: handleAddRow,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: newType,\n          onChange: e => setNewType(e.target.value),\n          className: \"rounded-md border-gray-300 focus:ring-purple-500 focus:border-purple-500 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"revenue\",\n            children: \"Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"expense\",\n            children: \"Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newLabel,\n          onChange: e => setNewLabel(e.target.value),\n          placeholder: newType === 'revenue' ? 'Revenue line' : 'Expense line',\n          className: \"rounded-md border-gray-300 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-3 py-2 rounded-md bg-purple-600 text-white text-xs font-semibold hover:bg-purple-700\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full text-sm border border-gray-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-3 py-2 text-left font-medium text-gray-500 w-40\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), months.map(m => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-3 py-2 text-center font-medium text-gray-500\",\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [revenueRows.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 font-medium text-gray-700 whitespace-nowrap\",\n              children: row.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), row.values.map((val, monthIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: val,\n                onChange: e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value),\n                className: \"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, monthIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this))]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-green-100 font-semibold\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 text-green-900\",\n              children: \"Total Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), revenueTotals.map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 text-center text-green-900\",\n              children: t.toLocaleString()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), expenseRows.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 font-medium text-gray-700 whitespace-nowrap\",\n              children: row.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), row.values.map((val, monthIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: val,\n                onChange: e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value),\n                className: \"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)\n            }, monthIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this))]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-red-100 font-semibold\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 text-red-900\",\n              children: \"Total Costs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), expenseTotals.map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 text-center text-red-900\",\n              children: t.toLocaleString()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-blue-100 font-bold\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 text-blue-900\",\n              children: \"Profit / Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), profitLoss.map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 text-center text-blue-900\",\n              children: t.toLocaleString()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"muQegO/982DLeEB3N1XVqIbOpLw=\");\n_c = Budget;\nexport default Budget;\nvar _c;\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","months","initialRows","id","type","label","values","Budget","_s","rows","setRows","newLabel","setNewLabel","newType","setNewType","handleValueChange","rowIdx","monthIdx","value","updated","map","row","i","v","j","Number","handleAddRow","e","preventDefault","Date","now","Array","fill","revenueRows","filter","r","expenseRows","revenueTotals","expenseTotals","profitLoss","forEach","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","placeholder","m","val","indexOf","t","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/budget/Budget.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst initialRows = [\n  { id: 1, type: 'revenue', label: 'Product Sales', values: [12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000] },\n  { id: 2, type: 'revenue', label: 'Consulting', values: [4000, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200] },\n  { id: 3, type: 'expense', label: 'Salaries', values: [-8000, -8200, -8300, -8400, -8500, -8600, -8700, -8800, -8900, -9000, -9100, -9200] },\n  { id: 4, type: 'expense', label: 'Marketing', values: [-2000, -2100, -2200, -2300, -2400, -2500, -2600, -2700, -2800, -2900, -3000, -3100] },\n];\n\nconst Budget = () => {\n  const [rows, setRows] = useState(initialRows);\n  const [newLabel, setNewLabel] = useState('');\n  const [newType, setNewType] = useState('revenue');\n\n  const handleValueChange = (rowIdx, monthIdx, value) => {\n    const updated = rows.map((row, i) =>\n      i === rowIdx\n        ? { ...row, values: row.values.map((v, j) => (j === monthIdx ? Number(value) : v)) }\n        : row\n    );\n    setRows(updated);\n  };\n\n  const handleAddRow = (e) => {\n    e.preventDefault();\n    if (!newLabel) return;\n    setRows([\n      ...rows,\n      {\n        id: Date.now(),\n        type: newType,\n        label: newLabel,\n        values: Array(12).fill(0),\n      },\n    ]);\n    setNewLabel('');\n    setNewType('revenue');\n  };\n\n  // Calculate totals\n  const revenueRows = rows.filter(r => r.type === 'revenue');\n  const expenseRows = rows.filter(r => r.type === 'expense');\n  const revenueTotals = Array(12).fill(0);\n  const expenseTotals = Array(12).fill(0);\n  const profitLoss = Array(12).fill(0);\n\n  revenueRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      revenueTotals[i] += v;\n    });\n  });\n  expenseRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      expenseTotals[i] += v;\n    });\n  });\n  for (let i = 0; i < 12; i++) {\n    profitLoss[i] = revenueTotals[i] + expenseTotals[i];\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl shadow border border-gray-100 p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-lg font-semibold text-gray-900\">Budget (P&amp;L by Month)</h2>\n        <form className=\"flex gap-2 items-end\" onSubmit={handleAddRow}>\n          <select\n            value={newType}\n            onChange={e => setNewType(e.target.value)}\n            className=\"rounded-md border-gray-300 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n          >\n            <option value=\"revenue\">Revenue</option>\n            <option value=\"expense\">Expense</option>\n          </select>\n          <input\n            type=\"text\"\n            value={newLabel}\n            onChange={e => setNewLabel(e.target.value)}\n            placeholder={newType === 'revenue' ? 'Revenue line' : 'Expense line'}\n            className=\"rounded-md border-gray-300 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n          />\n          <button type=\"submit\" className=\"px-3 py-2 rounded-md bg-purple-600 text-white text-xs font-semibold hover:bg-purple-700\">Add</button>\n        </form>\n      </div>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full text-sm border border-gray-200 rounded-lg\">\n          <thead>\n            <tr className=\"bg-gray-50\">\n              <th className=\"px-3 py-2 text-left font-medium text-gray-500 w-40\">Line</th>\n              {months.map((m) => (\n                <th key={m} className=\"px-3 py-2 text-center font-medium text-gray-500\">{m}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {/* Revenue rows */}\n            {revenueRows.map((row, rowIdx) => (\n              <tr key={row.id} className=\"bg-white\">\n                <td className=\"px-3 py-2 font-medium text-gray-700 whitespace-nowrap\">{row.label}</td>\n                {row.values.map((val, monthIdx) => (\n                  <td key={monthIdx} className=\"px-2 py-1 text-center\">\n                    <input\n                      type=\"number\"\n                      value={val}\n                      onChange={e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value)}\n                      className=\"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n                    />\n                  </td>\n                ))}\n              </tr>\n            ))}\n            {/* Revenue total row */}\n            <tr className=\"bg-green-100 font-semibold\">\n              <td className=\"px-3 py-2 text-green-900\">Total Revenue</td>\n              {revenueTotals.map((t, i) => (\n                <td key={i} className=\"px-2 py-1 text-center text-green-900\">{t.toLocaleString()}</td>\n              ))}\n            </tr>\n            {/* Expense rows */}\n            {expenseRows.map((row, rowIdx) => (\n              <tr key={row.id} className=\"bg-white\">\n                <td className=\"px-3 py-2 font-medium text-gray-700 whitespace-nowrap\">{row.label}</td>\n                {row.values.map((val, monthIdx) => (\n                  <td key={monthIdx} className=\"px-2 py-1 text-center\">\n                    <input\n                      type=\"number\"\n                      value={val}\n                      onChange={e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value)}\n                      className=\"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n                    />\n                  </td>\n                ))}\n              </tr>\n            ))}\n            {/* Costs total row */}\n            <tr className=\"bg-red-100 font-semibold\">\n              <td className=\"px-3 py-2 text-red-900\">Total Costs</td>\n              {expenseTotals.map((t, i) => (\n                <td key={i} className=\"px-2 py-1 text-center text-red-900\">{t.toLocaleString()}</td>\n              ))}\n            </tr>\n            {/* Profit/Loss row */}\n            <tr className=\"bg-blue-100 font-bold\">\n              <td className=\"px-3 py-2 text-blue-900\">Profit / Loss</td>\n              {profitLoss.map((t, i) => (\n                <td key={i} className=\"px-2 py-1 text-center text-blue-900\">{t.toLocaleString()}</td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Budget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}