{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/budget/Budget.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst initialRows = [{\n  id: 1,\n  type: 'revenue',\n  label: 'Product Sales',\n  values: [12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000],\n  repeat: 'Repeating'\n}, {\n  id: 2,\n  type: 'revenue',\n  label: 'Consulting',\n  values: [4000, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200],\n  repeat: 'Repeating'\n}, {\n  id: 3,\n  type: 'expense',\n  label: 'Salaries',\n  values: [-8000, -8200, -8300, -8400, -8500, -8600, -8700, -8800, -8900, -9000, -9100, -9200],\n  repeat: 'Repeating'\n}, {\n  id: 4,\n  type: 'expense',\n  label: 'Marketing',\n  values: [-2000, -2100, -2200, -2300, -2400, -2500, -2600, -2700, -2800, -2900, -3000, -3100],\n  repeat: 'Repeating'\n}];\nconst Budget = () => {\n  _s();\n  const [rows, setRows] = useState(initialRows);\n  const [expandRevenue, setExpandRevenue] = useState(true);\n  const [expandCosts, setExpandCosts] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState('revenue');\n  const [modalCategory, setModalCategory] = useState('');\n  const [modalSubcategory, setModalSubcategory] = useState('');\n  const [modalRepeat, setModalRepeat] = useState('Repeating');\n  const [modalAmount, setModalAmount] = useState('');\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [isBudgetLocked, setIsBudgetLocked] = useState(false);\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showAddSubcategory, setShowAddSubcategory] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [newSubcategory, setNewSubcategory] = useState('');\n  const [viewMode, setViewMode] = useState('months'); // 'months' or 'quarters'\n  const [expandedCategories, setExpandedCategories] = useState(new Set());\n  const [activeTab, setActiveTab] = useState('budget'); // 'budget' or 'forecast'\n\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({\n    length: 5\n  }, (_, i) => currentYear + i);\n\n  // Mock categories and subcategories\n  const categories = {\n    revenue: ['Product Sales', 'Consulting', 'Licensing', 'Subscriptions'],\n    expense: ['Salaries', 'Marketing', 'Office', 'Technology', 'Legal']\n  };\n  const subcategories = {\n    'Product Sales': ['Software Licenses', 'Hardware Sales', 'Support Services'],\n    'Consulting': ['Strategy', 'Implementation', 'Training'],\n    'Salaries': ['Engineering', 'Sales', 'Marketing', 'Admin'],\n    'Marketing': ['Digital Ads', 'Content', 'Events', 'PR'],\n    'Office': ['Rent', 'Utilities', 'Supplies'],\n    'Technology': ['Software', 'Hardware', 'Cloud Services'],\n    'Legal': ['Contracts', 'Compliance', 'IP']\n  };\n\n  // Group rows by category and subcategory\n  const groupedRows = rows.reduce((acc, row) => {\n    const [category, subcategory] = row.label.split(' - ');\n    if (!acc[category]) {\n      acc[category] = {\n        type: row.type,\n        subcategories: {}\n      };\n    }\n    if (!acc[category].subcategories[subcategory]) {\n      acc[category].subcategories[subcategory] = [];\n    }\n    acc[category].subcategories[subcategory].push(row);\n    return acc;\n  }, {});\n  const toggleCategory = category => {\n    const newExpanded = new Set(expandedCategories);\n    if (newExpanded.has(category)) {\n      newExpanded.delete(category);\n    } else {\n      newExpanded.add(category);\n    }\n    setExpandedCategories(newExpanded);\n  };\n\n  // Calculate quarterly totals\n  const calculateQuarterlyTotals = values => {\n    const quarters = [];\n    for (let i = 0; i < 4; i++) {\n      const start = i * 3;\n      const quarterTotal = values.slice(start, start + 3).reduce((sum, val) => sum + val, 0);\n      quarters.push(quarterTotal);\n    }\n    return quarters;\n  };\n  const handleValueChange = (rowIdx, monthIdx, value) => {\n    const updated = rows.map((row, i) => i === rowIdx ? {\n      ...row,\n      values: row.values.map((v, j) => j === monthIdx ? Number(value) : v)\n    } : row);\n    setRows(updated);\n  };\n  const handleAddItem = e => {\n    e.preventDefault();\n    if (!modalCategory || !modalAmount) return;\n    const amount = Number(modalAmount);\n    let values;\n    if (modalRepeat === 'Repeating') {\n      values = Array(12).fill(modalType === 'expense' ? -Math.abs(amount) : Math.abs(amount));\n    } else {\n      values = Array(12).fill(0);\n      values[0] = modalType === 'expense' ? -Math.abs(amount) : Math.abs(amount);\n    }\n    setRows([...rows, {\n      id: Date.now(),\n      type: modalType,\n      label: `${modalCategory} - ${modalSubcategory}`,\n      values,\n      repeat: modalRepeat\n    }]);\n    setShowModal(false);\n    setModalType('revenue');\n    setModalCategory('');\n    setModalSubcategory('');\n    setModalRepeat('Repeating');\n    setModalAmount('');\n  };\n\n  // Calculate totals\n  const revenueRows = rows.filter(r => r.type === 'revenue');\n  const expenseRows = rows.filter(r => r.type === 'expense');\n  const revenueTotals = Array(12).fill(0);\n  const expenseTotals = Array(12).fill(0);\n  const profitLoss = Array(12).fill(0);\n  revenueRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      revenueTotals[i] += v;\n    });\n  });\n  expenseRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      expenseTotals[i] += v;\n    });\n  });\n  for (let i = 0; i < 12; i++) {\n    profitLoss[i] = revenueTotals[i] + expenseTotals[i];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-gray-900\",\n        children: \"Budget & Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-base\",\n        children: \"Add and manage your revenue and cost lines. Expand/collapse groups to focus on what matters. All values are editable.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"-mb-px flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('budget'),\n            className: `py-2 px-1 border-b-2 font-medium text-sm ${activeTab === 'budget' ? 'border-purple-500 text-purple-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('forecast'),\n            className: `py-2 px-1 border-b-2 font-medium text-sm ${activeTab === 'forecast' ? 'border-purple-500 text-purple-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n            children: \"Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), activeTab === 'budget' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 flex items-end gap-2 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 rounded-md bg-purple-600 text-white text-sm font-semibold hover:bg-purple-700\",\n          onClick: () => setShowModal(true),\n          children: \"+ Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(Number(e.target.value)),\n          className: \"px-4 py-2 rounded-md border border-gray-300 focus:ring-purple-500 focus:border-purple-500 text-sm w-32\",\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-4 py-2 rounded-md text-sm font-semibold flex items-center gap-2 ${isBudgetLocked ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n          onClick: () => setIsBudgetLocked(!isBudgetLocked),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4\",\n            fill: \"currentColor\",\n            viewBox: \"0 0 20 20\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), isBudgetLocked ? 'Unlock Budget' : 'Lock Budget']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto flex items-center bg-purple-100 rounded-md p-0.5 shadow-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('months'),\n            className: `px-3 py-1.5 text-sm font-semibold rounded-md transition-all duration-150 focus:outline-none\n                  ${viewMode === 'months' ? 'bg-white text-purple-700 shadow z-10' : 'bg-transparent text-purple-600'}`,\n            children: \"Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('quarters'),\n            className: `px-3 py-1.5 text-sm font-semibold rounded-md transition-all duration-150 focus:outline-none\n                  ${viewMode === 'quarters' ? 'bg-white text-purple-700 shadow z-10' : 'bg-transparent text-purple-600'}`,\n            children: \"Quarters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow border border-gray-100 p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full text-sm border border-gray-200 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-3 py-2 text-left font-medium text-gray-500 w-40\",\n                  children: \"Line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this), viewMode === 'months' ? months.map(m => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-3 py-2 text-center font-medium text-gray-500\",\n                  children: m\n                }, m, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this)) : ['Q1', 'Q2', 'Q3', 'Q4'].map(q => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-3 py-2 text-center font-medium text-gray-500\",\n                  children: q\n                }, q, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-green-100 cursor-pointer group\",\n                onClick: () => setExpandRevenue(v => !v),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-3 py-2 font-bold text-green-800 flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-block w-4\",\n                    children: expandRevenue ? '▼' : '▶'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), \" Revenue\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), viewMode === 'months' ? revenueTotals.map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 py-1 text-center text-green-800 font-semibold\",\n                  children: t.toLocaleString()\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this)) : calculateQuarterlyTotals(revenueTotals).map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 py-1 text-center text-green-800 font-semibold\",\n                  children: t.toLocaleString()\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), expandRevenue && Object.entries(groupedRows).filter(([category, data]) => data.type === 'revenue').map(([category, data]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"bg-green-50 cursor-pointer\",\n                  onClick: () => toggleCategory(category),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-3 py-2 font-medium text-green-900 flex items-center gap-2 pl-8\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inline-block w-4\",\n                      children: expandedCategories.has(category) ? '▼' : '▶'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this), \" \", category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this), viewMode === 'months' ? Array(12).fill(0).map((_, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center text-green-900 font-medium\",\n                    children: Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0).toLocaleString()\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this)) : calculateQuarterlyTotals(Array(12).fill(0).map((_, i) => Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0))).map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center text-green-900 font-medium\",\n                    children: t.toLocaleString()\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), expandedCategories.has(category) && Object.entries(data.subcategories).map(([subcategory, subRows]) => subRows.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"bg-white\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-3 py-2 font-medium text-gray-700 whitespace-nowrap pl-12\",\n                    children: subcategory\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 29\n                  }, this), viewMode === 'months' ? row.values.map((val, monthIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: val,\n                      onChange: e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value),\n                      className: \"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 35\n                    }, this)\n                  }, monthIdx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 33\n                  }, this)) : calculateQuarterlyTotals(row.values).map((val, quarterIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center font-medium\",\n                    children: val.toLocaleString()\n                  }, quarterIdx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 33\n                  }, this))]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 27\n                }, this)))]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-red-100 cursor-pointer group\",\n                onClick: () => setExpandCosts(v => !v),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-3 py-2 font-bold text-red-800 flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-block w-4\",\n                    children: expandCosts ? '▼' : '▶'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), \" Costs\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this), viewMode === 'months' ? expenseTotals.map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 py-1 text-center text-red-800 font-semibold\",\n                  children: t.toLocaleString()\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this)) : calculateQuarterlyTotals(expenseTotals).map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 py-1 text-center text-red-800 font-semibold\",\n                  children: t.toLocaleString()\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), expandCosts && Object.entries(groupedRows).filter(([category, data]) => data.type === 'expense').map(([category, data]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"bg-red-50 cursor-pointer\",\n                  onClick: () => toggleCategory(category),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-3 py-2 font-medium text-red-900 flex items-center gap-2 pl-8\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inline-block w-4\",\n                      children: expandedCategories.has(category) ? '▼' : '▶'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 27\n                    }, this), \" \", category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this), viewMode === 'months' ? Array(12).fill(0).map((_, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center text-red-900 font-medium\",\n                    children: Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0).toLocaleString()\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this)) : calculateQuarterlyTotals(Array(12).fill(0).map((_, i) => Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0))).map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center text-red-900 font-medium\",\n                    children: t.toLocaleString()\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), expandedCategories.has(category) && Object.entries(data.subcategories).map(([subcategory, subRows]) => subRows.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"bg-white\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-3 py-2 font-medium text-gray-700 whitespace-nowrap pl-12\",\n                    children: subcategory\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 29\n                  }, this), viewMode === 'months' ? row.values.map((val, monthIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: val,\n                      onChange: e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value),\n                      className: \"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 35\n                    }, this)\n                  }, monthIdx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 33\n                  }, this)) : calculateQuarterlyTotals(row.values).map((val, quarterIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1 text-center font-medium\",\n                    children: val.toLocaleString()\n                  }, quarterIdx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 33\n                  }, this))]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 27\n                }, this)))]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-blue-100 font-bold\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-3 py-2 text-blue-900\",\n                  children: \"Profit / Loss\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this), viewMode === 'months' ? profitLoss.map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 py-1 text-center text-blue-900\",\n                  children: t.toLocaleString()\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 25\n                }, this)) : calculateQuarterlyTotals(profitLoss).map((t, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 py-1 text-center text-blue-900\",\n                  children: t.toLocaleString()\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow border border-gray-100 p-12 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"mx-auto h-12 w-12 text-gray-400\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-2 text-sm font-medium text-gray-900\",\n          children: \"Forecast Coming Soon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: \"Forecast functionality will be available in the next update.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"kZeVF0ch0TpacEjCv6SodxAv2eI=\");\n_c = Budget;\nexport default Budget;\nvar _c;\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","months","initialRows","id","type","label","values","repeat","Budget","_s","rows","setRows","expandRevenue","setExpandRevenue","expandCosts","setExpandCosts","showModal","setShowModal","modalType","setModalType","modalCategory","setModalCategory","modalSubcategory","setModalSubcategory","modalRepeat","setModalRepeat","modalAmount","setModalAmount","selectedYear","setSelectedYear","Date","getFullYear","isBudgetLocked","setIsBudgetLocked","showAddCategory","setShowAddCategory","showAddSubcategory","setShowAddSubcategory","newCategory","setNewCategory","newSubcategory","setNewSubcategory","viewMode","setViewMode","expandedCategories","setExpandedCategories","Set","activeTab","setActiveTab","currentYear","years","Array","from","length","_","i","categories","revenue","expense","subcategories","groupedRows","reduce","acc","row","category","subcategory","split","push","toggleCategory","newExpanded","has","delete","add","calculateQuarterlyTotals","quarters","start","quarterTotal","slice","sum","val","handleValueChange","rowIdx","monthIdx","value","updated","map","v","j","Number","handleAddItem","e","preventDefault","amount","fill","Math","abs","now","revenueRows","filter","r","expenseRows","revenueTotals","expenseTotals","profitLoss","forEach","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","target","year","viewBox","fillRule","d","clipRule","m","q","t","toLocaleString","Object","entries","data","flat","subRows","indexOf","quarterIdx","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/budget/Budget.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst initialRows = [\n  { id: 1, type: 'revenue', label: 'Product Sales', values: [12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000], repeat: 'Repeating' },\n  { id: 2, type: 'revenue', label: 'Consulting', values: [4000, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200], repeat: 'Repeating' },\n  { id: 3, type: 'expense', label: 'Salaries', values: [-8000, -8200, -8300, -8400, -8500, -8600, -8700, -8800, -8900, -9000, -9100, -9200], repeat: 'Repeating' },\n  { id: 4, type: 'expense', label: 'Marketing', values: [-2000, -2100, -2200, -2300, -2400, -2500, -2600, -2700, -2800, -2900, -3000, -3100], repeat: 'Repeating' },\n];\n\nconst Budget = () => {\n  const [rows, setRows] = useState(initialRows);\n  const [expandRevenue, setExpandRevenue] = useState(true);\n  const [expandCosts, setExpandCosts] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState('revenue');\n  const [modalCategory, setModalCategory] = useState('');\n  const [modalSubcategory, setModalSubcategory] = useState('');\n  const [modalRepeat, setModalRepeat] = useState('Repeating');\n  const [modalAmount, setModalAmount] = useState('');\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [isBudgetLocked, setIsBudgetLocked] = useState(false);\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showAddSubcategory, setShowAddSubcategory] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [newSubcategory, setNewSubcategory] = useState('');\n  const [viewMode, setViewMode] = useState('months'); // 'months' or 'quarters'\n  const [expandedCategories, setExpandedCategories] = useState(new Set());\n  const [activeTab, setActiveTab] = useState('budget'); // 'budget' or 'forecast'\n\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: 5 }, (_, i) => currentYear + i);\n\n  // Mock categories and subcategories\n  const categories = {\n    revenue: ['Product Sales', 'Consulting', 'Licensing', 'Subscriptions'],\n    expense: ['Salaries', 'Marketing', 'Office', 'Technology', 'Legal']\n  };\n\n  const subcategories = {\n    'Product Sales': ['Software Licenses', 'Hardware Sales', 'Support Services'],\n    'Consulting': ['Strategy', 'Implementation', 'Training'],\n    'Salaries': ['Engineering', 'Sales', 'Marketing', 'Admin'],\n    'Marketing': ['Digital Ads', 'Content', 'Events', 'PR'],\n    'Office': ['Rent', 'Utilities', 'Supplies'],\n    'Technology': ['Software', 'Hardware', 'Cloud Services'],\n    'Legal': ['Contracts', 'Compliance', 'IP']\n  };\n\n  // Group rows by category and subcategory\n  const groupedRows = rows.reduce((acc, row) => {\n    const [category, subcategory] = row.label.split(' - ');\n    if (!acc[category]) {\n      acc[category] = { type: row.type, subcategories: {} };\n    }\n    if (!acc[category].subcategories[subcategory]) {\n      acc[category].subcategories[subcategory] = [];\n    }\n    acc[category].subcategories[subcategory].push(row);\n    return acc;\n  }, {});\n\n  const toggleCategory = (category) => {\n    const newExpanded = new Set(expandedCategories);\n    if (newExpanded.has(category)) {\n      newExpanded.delete(category);\n    } else {\n      newExpanded.add(category);\n    }\n    setExpandedCategories(newExpanded);\n  };\n\n  // Calculate quarterly totals\n  const calculateQuarterlyTotals = (values) => {\n    const quarters = [];\n    for (let i = 0; i < 4; i++) {\n      const start = i * 3;\n      const quarterTotal = values.slice(start, start + 3).reduce((sum, val) => sum + val, 0);\n      quarters.push(quarterTotal);\n    }\n    return quarters;\n  };\n\n  const handleValueChange = (rowIdx, monthIdx, value) => {\n    const updated = rows.map((row, i) =>\n      i === rowIdx\n        ? { ...row, values: row.values.map((v, j) => (j === monthIdx ? Number(value) : v)) }\n        : row\n    );\n    setRows(updated);\n  };\n\n  const handleAddItem = (e) => {\n    e.preventDefault();\n    if (!modalCategory || !modalAmount) return;\n    const amount = Number(modalAmount);\n    let values;\n    if (modalRepeat === 'Repeating') {\n      values = Array(12).fill(modalType === 'expense' ? -Math.abs(amount) : Math.abs(amount));\n    } else {\n      values = Array(12).fill(0);\n      values[0] = modalType === 'expense' ? -Math.abs(amount) : Math.abs(amount);\n    }\n    setRows([\n      ...rows,\n      {\n        id: Date.now(),\n        type: modalType,\n        label: `${modalCategory} - ${modalSubcategory}`,\n        values,\n        repeat: modalRepeat,\n      },\n    ]);\n    setShowModal(false);\n    setModalType('revenue');\n    setModalCategory('');\n    setModalSubcategory('');\n    setModalRepeat('Repeating');\n    setModalAmount('');\n  };\n\n  // Calculate totals\n  const revenueRows = rows.filter(r => r.type === 'revenue');\n  const expenseRows = rows.filter(r => r.type === 'expense');\n  const revenueTotals = Array(12).fill(0);\n  const expenseTotals = Array(12).fill(0);\n  const profitLoss = Array(12).fill(0);\n\n  revenueRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      revenueTotals[i] += v;\n    });\n  });\n  expenseRows.forEach(row => {\n    row.values.forEach((v, i) => {\n      expenseTotals[i] += v;\n    });\n  });\n  for (let i = 0; i < 12; i++) {\n    profitLoss[i] = revenueTotals[i] + expenseTotals[i];\n  }\n\n  return (\n    <div>\n      {/* Heading and sub-description */}\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-900\">Budget & Forecast</h2>\n        <p className=\"text-gray-600 text-base\">Add and manage your revenue and cost lines. Expand/collapse groups to focus on what matters. All values are editable.</p>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-4\">\n            <button\n              onClick={() => setActiveTab('budget')}\n              className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'budget'\n                  ? 'border-purple-500 text-purple-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              Budget\n            </button>\n            <button\n              onClick={() => setActiveTab('forecast')}\n              className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'forecast'\n                  ? 'border-purple-500 text-purple-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              Forecast\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {activeTab === 'budget' ? (\n        <>\n          {/* Controls row: Add item, year, lock, toggle (right) */}\n          <div className=\"mb-2 flex items-end gap-2 w-full\">\n            <button\n              className=\"px-4 py-2 rounded-md bg-purple-600 text-white text-sm font-semibold hover:bg-purple-700\"\n              onClick={() => setShowModal(true)}\n            >\n              + Add Item\n            </button>\n            <select\n              value={selectedYear}\n              onChange={(e) => setSelectedYear(Number(e.target.value))}\n              className=\"px-4 py-2 rounded-md border border-gray-300 focus:ring-purple-500 focus:border-purple-500 text-sm w-32\"\n            >\n              {years.map(year => (\n                <option key={year} value={year}>{year}</option>\n              ))}\n            </select>\n            <button\n              className={`px-4 py-2 rounded-md text-sm font-semibold flex items-center gap-2 ${\n                isBudgetLocked \n                  ? 'bg-green-600 text-white hover:bg-green-700' \n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n              onClick={() => setIsBudgetLocked(!isBudgetLocked)}\n            >\n              <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\" />\n              </svg>\n              {isBudgetLocked ? 'Unlock Budget' : 'Lock Budget'}\n            </button>\n            <div className=\"ml-auto flex items-center bg-purple-100 rounded-md p-0.5 shadow-inner\">\n              <button\n                onClick={() => setViewMode('months')}\n                className={`px-3 py-1.5 text-sm font-semibold rounded-md transition-all duration-150 focus:outline-none\n                  ${viewMode === 'months' ? 'bg-white text-purple-700 shadow z-10' : 'bg-transparent text-purple-600'}`}\n              >\n                Months\n              </button>\n              <button\n                onClick={() => setViewMode('quarters')}\n                className={`px-3 py-1.5 text-sm font-semibold rounded-md transition-all duration-150 focus:outline-none\n                  ${viewMode === 'quarters' ? 'bg-white text-purple-700 shadow z-10' : 'bg-transparent text-purple-600'}`}\n              >\n                Quarters\n              </button>\n            </div>\n          </div>\n\n          {/* Table remains in its own overflow-x-auto box below */}\n          <div className=\"bg-white rounded-xl shadow border border-gray-100 p-6\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full text-sm border border-gray-200 rounded-lg\">\n                <thead>\n                  <tr className=\"bg-gray-50\">\n                    <th className=\"px-3 py-2 text-left font-medium text-gray-500 w-40\">Line</th>\n                    {viewMode === 'months' ? (\n                      months.map((m) => (\n                        <th key={m} className=\"px-3 py-2 text-center font-medium text-gray-500\">{m}</th>\n                      ))\n                    ) : (\n                      ['Q1', 'Q2', 'Q3', 'Q4'].map((q) => (\n                        <th key={q} className=\"px-3 py-2 text-center font-medium text-gray-500\">{q}</th>\n                      ))\n                    )}\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* Revenue group */}\n                  <tr className=\"bg-green-100 cursor-pointer group\" onClick={() => setExpandRevenue(v => !v)}>\n                    <td className=\"px-3 py-2 font-bold text-green-800 flex items-center gap-2\">\n                      <span className=\"inline-block w-4\">{expandRevenue ? '▼' : '▶'}</span> Revenue\n                    </td>\n                    {viewMode === 'months' ? (\n                      revenueTotals.map((t, i) => (\n                        <td key={i} className=\"px-2 py-1 text-center text-green-800 font-semibold\">{t.toLocaleString()}</td>\n                      ))\n                    ) : (\n                      calculateQuarterlyTotals(revenueTotals).map((t, i) => (\n                        <td key={i} className=\"px-2 py-1 text-center text-green-800 font-semibold\">{t.toLocaleString()}</td>\n                      ))\n                    )}\n                  </tr>\n                  {expandRevenue && Object.entries(groupedRows).filter(([category, data]) => data.type === 'revenue').map(([category, data]) => (\n                    <React.Fragment key={category}>\n                      <tr className=\"bg-green-50 cursor-pointer\" onClick={() => toggleCategory(category)}>\n                        <td className=\"px-3 py-2 font-medium text-green-900 flex items-center gap-2 pl-8\">\n                          <span className=\"inline-block w-4\">{expandedCategories.has(category) ? '▼' : '▶'}</span> {category}\n                        </td>\n                        {viewMode === 'months' ? (\n                          Array(12).fill(0).map((_, i) => (\n                            <td key={i} className=\"px-2 py-1 text-center text-green-900 font-medium\">\n                              {Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0).toLocaleString()}\n                            </td>\n                          ))\n                        ) : (\n                          calculateQuarterlyTotals(Array(12).fill(0).map((_, i) => \n                            Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0)\n                          )).map((t, i) => (\n                            <td key={i} className=\"px-2 py-1 text-center text-green-900 font-medium\">{t.toLocaleString()}</td>\n                          ))\n                        )}\n                      </tr>\n                      {expandedCategories.has(category) && Object.entries(data.subcategories).map(([subcategory, subRows]) => (\n                        subRows.map((row, rowIdx) => (\n                          <tr key={row.id} className=\"bg-white\">\n                            <td className=\"px-3 py-2 font-medium text-gray-700 whitespace-nowrap pl-12\">{subcategory}</td>\n                            {viewMode === 'months' ? (\n                              row.values.map((val, monthIdx) => (\n                                <td key={monthIdx} className=\"px-2 py-1 text-center\">\n                                  <input\n                                    type=\"number\"\n                                    value={val}\n                                    onChange={e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value)}\n                                    className=\"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n                                  />\n                                </td>\n                              ))\n                            ) : (\n                              calculateQuarterlyTotals(row.values).map((val, quarterIdx) => (\n                                <td key={quarterIdx} className=\"px-2 py-1 text-center font-medium\">{val.toLocaleString()}</td>\n                              ))\n                            )}\n                          </tr>\n                        ))\n                      ))}\n                    </React.Fragment>\n                  ))}\n                  {/* Costs group */}\n                  <tr className=\"bg-red-100 cursor-pointer group\" onClick={() => setExpandCosts(v => !v)}>\n                    <td className=\"px-3 py-2 font-bold text-red-800 flex items-center gap-2\">\n                      <span className=\"inline-block w-4\">{expandCosts ? '▼' : '▶'}</span> Costs\n                    </td>\n                    {viewMode === 'months' ? (\n                      expenseTotals.map((t, i) => (\n                        <td key={i} className=\"px-2 py-1 text-center text-red-800 font-semibold\">{t.toLocaleString()}</td>\n                      ))\n                    ) : (\n                      calculateQuarterlyTotals(expenseTotals).map((t, i) => (\n                        <td key={i} className=\"px-2 py-1 text-center text-red-800 font-semibold\">{t.toLocaleString()}</td>\n                      ))\n                    )}\n                  </tr>\n                  {expandCosts && Object.entries(groupedRows).filter(([category, data]) => data.type === 'expense').map(([category, data]) => (\n                    <React.Fragment key={category}>\n                      <tr className=\"bg-red-50 cursor-pointer\" onClick={() => toggleCategory(category)}>\n                        <td className=\"px-3 py-2 font-medium text-red-900 flex items-center gap-2 pl-8\">\n                          <span className=\"inline-block w-4\">{expandedCategories.has(category) ? '▼' : '▶'}</span> {category}\n                        </td>\n                        {viewMode === 'months' ? (\n                          Array(12).fill(0).map((_, i) => (\n                            <td key={i} className=\"px-2 py-1 text-center text-red-900 font-medium\">\n                              {Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0).toLocaleString()}\n                            </td>\n                          ))\n                        ) : (\n                          calculateQuarterlyTotals(Array(12).fill(0).map((_, i) => \n                            Object.values(data.subcategories).flat().reduce((sum, row) => sum + row.values[i], 0)\n                          )).map((t, i) => (\n                            <td key={i} className=\"px-2 py-1 text-center text-red-900 font-medium\">{t.toLocaleString()}</td>\n                          ))\n                        )}\n                      </tr>\n                      {expandedCategories.has(category) && Object.entries(data.subcategories).map(([subcategory, subRows]) => (\n                        subRows.map((row, rowIdx) => (\n                          <tr key={row.id} className=\"bg-white\">\n                            <td className=\"px-3 py-2 font-medium text-gray-700 whitespace-nowrap pl-12\">{subcategory}</td>\n                            {viewMode === 'months' ? (\n                              row.values.map((val, monthIdx) => (\n                                <td key={monthIdx} className=\"px-2 py-1 text-center\">\n                                  <input\n                                    type=\"number\"\n                                    value={val}\n                                    onChange={e => handleValueChange(rows.indexOf(row), monthIdx, e.target.value)}\n                                    className=\"w-20 rounded border-gray-200 text-right px-2 py-1 focus:ring-purple-500 focus:border-purple-500 text-sm\"\n                                  />\n                                </td>\n                              ))\n                            ) : (\n                              calculateQuarterlyTotals(row.values).map((val, quarterIdx) => (\n                                <td key={quarterIdx} className=\"px-2 py-1 text-center font-medium\">{val.toLocaleString()}</td>\n                              ))\n                            )}\n                          </tr>\n                        ))\n                      ))}\n                    </React.Fragment>\n                  ))}\n                  {/* Profit/Loss row */}\n                  <tr className=\"bg-blue-100 font-bold\">\n                    <td className=\"px-3 py-2 text-blue-900\">Profit / Loss</td>\n                    {viewMode === 'months' ? (\n                      profitLoss.map((t, i) => (\n                        <td key={i} className=\"px-2 py-1 text-center text-blue-900\">{t.toLocaleString()}</td>\n                      ))\n                    ) : (\n                      calculateQuarterlyTotals(profitLoss).map((t, i) => (\n                        <td key={i} className=\"px-2 py-1 text-center text-blue-900\">{t.toLocaleString()}</td>\n                      ))\n                    )}\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"bg-white rounded-xl shadow border border-gray-100 p-12 text-center\">\n          <div className=\"text-gray-500\">\n            <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Forecast Coming Soon</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">Forecast functionality will be available in the next update.</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Budget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}