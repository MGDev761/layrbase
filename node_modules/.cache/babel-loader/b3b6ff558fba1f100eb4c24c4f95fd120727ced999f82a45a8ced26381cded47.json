{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/company-setup/components/details/orgchart/OrgChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../../../../../components/common/layout/Card';\n\n// Helper to find the path from the root to the selected person\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst findReportingPath = (node, selectedName) => {\n  if (node.name === selectedName) {\n    return [node.name];\n  }\n  if (node.children) {\n    for (const child of node.children) {\n      const path = findReportingPath(child, selectedName);\n      if (path) {\n        return [node.name, ...path];\n      }\n    }\n  }\n  return null;\n};\nconst MemberNode = ({\n  member,\n  isRoot = false,\n  onSelect,\n  selectedPersonName,\n  reportingPath\n}) => {\n  var _member$children;\n  const isSelected = member.name === selectedPersonName;\n  const isInPath = reportingPath.includes(member.name);\n  const hasChildInPath = (_member$children = member.children) === null || _member$children === void 0 ? void 0 : _member$children.some(c => reportingPath.includes(c.name));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative flex flex-col items-center ${isRoot ? '' : 'pt-8'}`,\n    children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-0 left-1/2 -translate-x-1/2 w-px h-8 ${isInPath ? 'bg-blue-500' : 'bg-gray-300'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelect(member.name),\n      className: `relative block text-left bg-white border ${isSelected ? 'border-blue-500 ring-2 ring-blue-200' : 'border-gray-300'} rounded-md shadow-sm p-2 w-40 z-10 hover:border-blue-400 transition-all duration-150`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-bold text-gray-900 text-center\",\n        children: member.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-primary-600 font-semibold text-center\",\n        children: member.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 text-center mt-1\",\n        children: member.team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), member.children && member.children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute top-full w-px h-8 ${hasChildInPath ? 'bg-blue-500' : 'bg-gray-300'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-8 relative\",\n        children: [member.children.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute top-0 left-0 right-0 h-px ${hasChildInPath ? 'bg-blue-500' : 'bg-gray-300'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), member.children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-2\",\n          children: /*#__PURE__*/_jsxDEV(MemberNode, {\n            member: child,\n            onSelect: onSelect,\n            selectedPersonName: selectedPersonName,\n            reportingPath: reportingPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, child.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = MemberNode;\nconst OrgChart = () => {\n  _s();\n  const [selectedPersonName, setSelectedPersonName] = useState(null);\n  const handleSelectPerson = name => {\n    setSelectedPersonName(prev => prev === name ? null : name);\n  };\n  const orgData = {\n    name: 'Eleanor Vance',\n    role: 'CEO',\n    team: 'Executive',\n    children: [{\n      name: 'Marcus Holloway',\n      role: 'CTO',\n      team: 'Technology',\n      children: [{\n        name: 'Aiden Pearce',\n        role: 'Lead Engineer',\n        team: 'Engineering',\n        children: [{\n          name: 'Clara Lille',\n          role: 'Frontend Dev',\n          team: 'Engineering'\n        }, {\n          name: 'Raymond Kenney',\n          role: 'Backend Dev',\n          team: 'Engineering'\n        }]\n      }, {\n        name: 'Javier Vega',\n        role: 'Head of Product',\n        team: 'Product',\n        children: [{\n          name: 'Sitara Dhawan',\n          role: 'Product Manager',\n          team: 'Product'\n        }]\n      }]\n    }, {\n      name: 'Miranda Lawson',\n      role: 'COO',\n      team: 'Operations',\n      children: [{\n        name: 'Jacob Taylor',\n        role: 'Ops Manager',\n        team: 'Operations'\n      }, {\n        name: 'Kasumi Goto',\n        role: 'HR Manager',\n        team: 'Human Resources'\n      }]\n    }]\n  };\n  const reportingPath = findReportingPath(orgData, selectedPersonName) || [];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-gray-900 text-center mb-8\",\n        children: \"Organization Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center min-w-max\",\n        children: /*#__PURE__*/_jsxDEV(MemberNode, {\n          member: orgData,\n          isRoot: true,\n          onSelect: handleSelectPerson,\n          selectedPersonName: selectedPersonName,\n          reportingPath: reportingPath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(OrgChart, \"rPM9H7x6D4+ssbOSehMoCiwAvCA=\");\n_c2 = OrgChart;\nexport default OrgChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemberNode\");\n$RefreshReg$(_c2, \"OrgChart\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","findReportingPath","node","selectedName","name","children","child","path","MemberNode","member","isRoot","onSelect","selectedPersonName","reportingPath","_member$children","isSelected","isInPath","includes","hasChildInPath","some","c","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","team","length","map","_c","OrgChart","_s","setSelectedPersonName","handleSelectPerson","prev","orgData","_c2","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/company-setup/components/details/orgchart/OrgChart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../../../../../components/common/layout/Card';\n\n// Helper to find the path from the root to the selected person\nconst findReportingPath = (node, selectedName) => {\n  if (node.name === selectedName) {\n    return [node.name];\n  }\n  if (node.children) {\n    for (const child of node.children) {\n      const path = findReportingPath(child, selectedName);\n      if (path) {\n        return [node.name, ...path];\n      }\n    }\n  }\n  return null;\n};\n\nconst MemberNode = ({ member, isRoot = false, onSelect, selectedPersonName, reportingPath }) => {\n  const isSelected = member.name === selectedPersonName;\n  const isInPath = reportingPath.includes(member.name);\n  const hasChildInPath = member.children?.some(c => reportingPath.includes(c.name));\n\n  return (\n    <div className={`relative flex flex-col items-center ${isRoot ? '' : 'pt-8'}`}>\n      {/* Connecting line from parent */}\n      {!isRoot && <div className={`absolute top-0 left-1/2 -translate-x-1/2 w-px h-8 ${isInPath ? 'bg-blue-500' : 'bg-gray-300'}`}></div>}\n      \n      {/* Member Box */}\n      <button \n        onClick={() => onSelect(member.name)}\n        className={`relative block text-left bg-white border ${isSelected ? 'border-blue-500 ring-2 ring-blue-200' : 'border-gray-300'} rounded-md shadow-sm p-2 w-40 z-10 hover:border-blue-400 transition-all duration-150`}\n      >\n        <h3 className=\"text-sm font-bold text-gray-900 text-center\">{member.name}</h3>\n        <p className=\"text-xs text-primary-600 font-semibold text-center\">{member.role}</p>\n        <p className=\"text-xs text-gray-500 text-center mt-1\">{member.team}</p>\n      </button>\n      \n      {/* Render children if they exist */}\n      {member.children && member.children.length > 0 && (\n        <>\n          {/* Vertical line connecting to children's horizontal bar */}\n          <div className={`absolute top-full w-px h-8 ${hasChildInPath ? 'bg-blue-500' : 'bg-gray-300'}`}></div>\n\n          <div className=\"flex justify-center mt-8 relative\">\n            {/* Horizontal connecting line - only if more than one child */}\n            {member.children.length > 1 && (\n              <div className={`absolute top-0 left-0 right-0 h-px ${hasChildInPath ? 'bg-blue-500' : 'bg-gray-300'}`}></div>\n            )}\n            \n            {member.children.map((child) => (\n              <div key={child.name} className=\"px-2\">\n                <MemberNode \n                  member={child} \n                  onSelect={onSelect} \n                  selectedPersonName={selectedPersonName}\n                  reportingPath={reportingPath}\n                />\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst OrgChart = () => {\n  const [selectedPersonName, setSelectedPersonName] = useState(null);\n\n  const handleSelectPerson = (name) => {\n    setSelectedPersonName(prev => prev === name ? null : name);\n  };\n\n  const orgData = {\n    name: 'Eleanor Vance',\n    role: 'CEO',\n    team: 'Executive',\n    children: [\n      {\n        name: 'Marcus Holloway',\n        role: 'CTO',\n        team: 'Technology',\n        children: [\n          {\n            name: 'Aiden Pearce',\n            role: 'Lead Engineer',\n            team: 'Engineering',\n            children: [\n                { name: 'Clara Lille', role: 'Frontend Dev', team: 'Engineering' },\n                { name: 'Raymond Kenney', role: 'Backend Dev', team: 'Engineering' },\n            ]\n          },\n          {\n            name: 'Javier Vega',\n            role: 'Head of Product',\n            team: 'Product',\n            children: [\n                { name: 'Sitara Dhawan', role: 'Product Manager', team: 'Product' },\n            ]\n          },\n        ],\n      },\n      {\n        name: 'Miranda Lawson',\n        role: 'COO',\n        team: 'Operations',\n        children: [\n          { name: 'Jacob Taylor', role: 'Ops Manager', team: 'Operations' },\n          { name: 'Kasumi Goto', role: 'HR Manager', team: 'Human Resources' },\n        ],\n      },\n    ],\n  };\n\n  const reportingPath = findReportingPath(orgData, selectedPersonName) || [];\n\n  return (\n    <Card>\n      <div className=\"overflow-x-auto p-4\">\n        <h2 className=\"text-xl font-bold text-gray-900 text-center mb-8\">Organization Chart</h2>\n        <div className=\"flex justify-center min-w-max\">\n          <MemberNode \n            member={orgData} \n            isRoot={true} \n            onSelect={handleSelectPerson} \n            selectedPersonName={selectedPersonName}\n            reportingPath={reportingPath}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default OrgChart; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,8CAA8C;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,YAAY,KAAK;EAChD,IAAID,IAAI,CAACE,IAAI,KAAKD,YAAY,EAAE;IAC9B,OAAO,CAACD,IAAI,CAACE,IAAI,CAAC;EACpB;EACA,IAAIF,IAAI,CAACG,QAAQ,EAAE;IACjB,KAAK,MAAMC,KAAK,IAAIJ,IAAI,CAACG,QAAQ,EAAE;MACjC,MAAME,IAAI,GAAGN,iBAAiB,CAACK,KAAK,EAAEH,YAAY,CAAC;MACnD,IAAII,IAAI,EAAE;QACR,OAAO,CAACL,IAAI,CAACE,IAAI,EAAE,GAAGG,IAAI,CAAC;MAC7B;IACF;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM,GAAG,KAAK;EAAEC,QAAQ;EAAEC,kBAAkB;EAAEC;AAAc,CAAC,KAAK;EAAA,IAAAC,gBAAA;EAC9F,MAAMC,UAAU,GAAGN,MAAM,CAACL,IAAI,KAAKQ,kBAAkB;EACrD,MAAMI,QAAQ,GAAGH,aAAa,CAACI,QAAQ,CAACR,MAAM,CAACL,IAAI,CAAC;EACpD,MAAMc,cAAc,IAAAJ,gBAAA,GAAGL,MAAM,CAACJ,QAAQ,cAAAS,gBAAA,uBAAfA,gBAAA,CAAiBK,IAAI,CAACC,CAAC,IAAIP,aAAa,CAACI,QAAQ,CAACG,CAAC,CAAChB,IAAI,CAAC,CAAC;EAEjF,oBACEN,OAAA;IAAKuB,SAAS,EAAE,uCAAuCX,MAAM,GAAG,EAAE,GAAG,MAAM,EAAG;IAAAL,QAAA,GAE3E,CAACK,MAAM,iBAAIZ,OAAA;MAAKuB,SAAS,EAAE,qDAAqDL,QAAQ,GAAG,aAAa,GAAG,aAAa;IAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAGnI3B,OAAA;MACE4B,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAACF,MAAM,CAACL,IAAI,CAAE;MACrCiB,SAAS,EAAE,4CAA4CN,UAAU,GAAG,sCAAsC,GAAG,iBAAiB,uFAAwF;MAAAV,QAAA,gBAEtNP,OAAA;QAAIuB,SAAS,EAAC,6CAA6C;QAAAhB,QAAA,EAAEI,MAAM,CAACL;MAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9E3B,OAAA;QAAGuB,SAAS,EAAC,oDAAoD;QAAAhB,QAAA,EAAEI,MAAM,CAACkB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnF3B,OAAA;QAAGuB,SAAS,EAAC,wCAAwC;QAAAhB,QAAA,EAAEI,MAAM,CAACmB;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,EAGRhB,MAAM,CAACJ,QAAQ,IAAII,MAAM,CAACJ,QAAQ,CAACwB,MAAM,GAAG,CAAC,iBAC5C/B,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBAEEP,OAAA;QAAKuB,SAAS,EAAE,8BAA8BH,cAAc,GAAG,aAAa,GAAG,aAAa;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEtG3B,OAAA;QAAKuB,SAAS,EAAC,mCAAmC;QAAAhB,QAAA,GAE/CI,MAAM,CAACJ,QAAQ,CAACwB,MAAM,GAAG,CAAC,iBACzB/B,OAAA;UAAKuB,SAAS,EAAE,sCAAsCH,cAAc,GAAG,aAAa,GAAG,aAAa;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC9G,EAEAhB,MAAM,CAACJ,QAAQ,CAACyB,GAAG,CAAExB,KAAK,iBACzBR,OAAA;UAAsBuB,SAAS,EAAC,MAAM;UAAAhB,QAAA,eACpCP,OAAA,CAACU,UAAU;YACTC,MAAM,EAAEH,KAAM;YACdK,QAAQ,EAAEA,QAAS;YACnBC,kBAAkB,EAAEA,kBAAmB;YACvCC,aAAa,EAAEA;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC,GANMnB,KAAK,CAACF,IAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOf,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GA/CIvB,UAAU;AAiDhB,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACrB,kBAAkB,EAAEsB,qBAAqB,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMwC,kBAAkB,GAAI/B,IAAI,IAAK;IACnC8B,qBAAqB,CAACE,IAAI,IAAIA,IAAI,KAAKhC,IAAI,GAAG,IAAI,GAAGA,IAAI,CAAC;EAC5D,CAAC;EAED,MAAMiC,OAAO,GAAG;IACdjC,IAAI,EAAE,eAAe;IACrBuB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,WAAW;IACjBvB,QAAQ,EAAE,CACR;MACED,IAAI,EAAE,iBAAiB;MACvBuB,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,YAAY;MAClBvB,QAAQ,EAAE,CACR;QACED,IAAI,EAAE,cAAc;QACpBuB,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,aAAa;QACnBvB,QAAQ,EAAE,CACN;UAAED,IAAI,EAAE,aAAa;UAAEuB,IAAI,EAAE,cAAc;UAAEC,IAAI,EAAE;QAAc,CAAC,EAClE;UAAExB,IAAI,EAAE,gBAAgB;UAAEuB,IAAI,EAAE,aAAa;UAAEC,IAAI,EAAE;QAAc,CAAC;MAE1E,CAAC,EACD;QACExB,IAAI,EAAE,aAAa;QACnBuB,IAAI,EAAE,iBAAiB;QACvBC,IAAI,EAAE,SAAS;QACfvB,QAAQ,EAAE,CACN;UAAED,IAAI,EAAE,eAAe;UAAEuB,IAAI,EAAE,iBAAiB;UAAEC,IAAI,EAAE;QAAU,CAAC;MAEzE,CAAC;IAEL,CAAC,EACD;MACExB,IAAI,EAAE,gBAAgB;MACtBuB,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,YAAY;MAClBvB,QAAQ,EAAE,CACR;QAAED,IAAI,EAAE,cAAc;QAAEuB,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAE;MAAa,CAAC,EACjE;QAAExB,IAAI,EAAE,aAAa;QAAEuB,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAkB,CAAC;IAExE,CAAC;EAEL,CAAC;EAED,MAAMf,aAAa,GAAGZ,iBAAiB,CAACoC,OAAO,EAAEzB,kBAAkB,CAAC,IAAI,EAAE;EAE1E,oBACEd,OAAA,CAACF,IAAI;IAAAS,QAAA,eACHP,OAAA;MAAKuB,SAAS,EAAC,qBAAqB;MAAAhB,QAAA,gBAClCP,OAAA;QAAIuB,SAAS,EAAC,kDAAkD;QAAAhB,QAAA,EAAC;MAAkB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxF3B,OAAA;QAAKuB,SAAS,EAAC,+BAA+B;QAAAhB,QAAA,eAC5CP,OAAA,CAACU,UAAU;UACTC,MAAM,EAAE4B,OAAQ;UAChB3B,MAAM,EAAE,IAAK;UACbC,QAAQ,EAAEwB,kBAAmB;UAC7BvB,kBAAkB,EAAEA,kBAAmB;UACvCC,aAAa,EAAEA;QAAc;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACQ,EAAA,CAlEID,QAAQ;AAAAM,GAAA,GAARN,QAAQ;AAoEd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}