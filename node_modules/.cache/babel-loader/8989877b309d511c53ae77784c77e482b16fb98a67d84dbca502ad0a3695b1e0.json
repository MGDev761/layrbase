{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/company-setup/components/details/orgchart/OrgChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../../../../../components/common/layout/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemberNode = ({\n  member,\n  isRoot = false,\n  onSelect,\n  selectedPersonName\n}) => {\n  const isSelected = member.name === selectedPersonName;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative flex flex-col items-center ${isRoot ? '' : 'pt-8'}`,\n    children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-1/2 -translate-x-1/2 w-px h-8 bg-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelect(member.name),\n      className: `relative block text-left bg-white border ${isSelected ? 'border-primary-500 ring-2 ring-primary-200' : 'border-gray-300'} rounded-md shadow-sm p-2 w-40 z-10 hover:border-primary-400 transition-all duration-150`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-bold text-gray-900 text-center\",\n        children: member.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-primary-600 font-semibold text-center\",\n        children: member.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 text-center mt-1\",\n        children: member.team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), member.children && member.children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-full w-px h-8 bg-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-8 relative\",\n        children: [member.children.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 left-0 right-0 h-px bg-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), member.children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-2\",\n          children: /*#__PURE__*/_jsxDEV(MemberNode, {\n            member: child,\n            onSelect: onSelect,\n            selectedPersonName: selectedPersonName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, child.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to create a filtered tree showing the reporting line and direct reports\n_c = MemberNode;\nconst buildFilteredTree = (node, selectedName) => {\n  // If this is the selected node, return it with its direct children\n  if (node.name === selectedName) {\n    // Return a copy of the node, ensuring children are included.\n    // We don't need to traverse deeper than the selected node's direct children.\n    return {\n      ...node,\n      children: node.children ? node.children.map(c => ({\n        ...c,\n        children: []\n      })) : []\n    };\n  }\n\n  // If this node has children, search them recursively\n  if (node.children) {\n    const childResults = node.children.map(child => buildFilteredTree(child, selectedName)).filter(Boolean); // Remove null results\n\n    // If a child path contains the selected node, this node is in the reporting line\n    if (childResults.length > 0) {\n      return {\n        ...node,\n        children: childResults\n      };\n    }\n  }\n\n  // This node is not the selected one and not in its reporting line\n  return null;\n};\nconst OrgChart = () => {\n  _s();\n  const [selectedPersonName, setSelectedPersonName] = useState(null);\n  const handleSelectPerson = name => {\n    // Allow toggling selection\n    setSelectedPersonName(prev => prev === name ? null : name);\n  };\n  const orgData = {\n    name: 'Eleanor Vance',\n    role: 'CEO',\n    team: 'Executive',\n    children: [{\n      name: 'Marcus Holloway',\n      role: 'CTO',\n      team: 'Technology',\n      children: [{\n        name: 'Aiden Pearce',\n        role: 'Lead Engineer',\n        team: 'Engineering',\n        children: [{\n          name: 'Clara Lille',\n          role: 'Frontend Dev',\n          team: 'Engineering'\n        }, {\n          name: 'Raymond Kenney',\n          role: 'Backend Dev',\n          team: 'Engineering'\n        }]\n      }, {\n        name: 'Javier Vega',\n        role: 'Head of Product',\n        team: 'Product',\n        children: [{\n          name: 'Sitara Dhawan',\n          role: 'Product Manager',\n          team: 'Product'\n        }]\n      }]\n    }, {\n      name: 'Miranda Lawson',\n      role: 'COO',\n      team: 'Operations',\n      children: [{\n        name: 'Jacob Taylor',\n        role: 'Ops Manager',\n        team: 'Operations'\n      }, {\n        name: 'Kasumi Goto',\n        role: 'HR Manager',\n        team: 'Human Resources'\n      }]\n    }]\n  };\n  const displayData = selectedPersonName ? buildFilteredTree(orgData, selectedPersonName) : orgData;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900\",\n          children: \"Organization Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), selectedPersonName && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedPersonName(null),\n          className: \"px-3 py-1 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200\",\n          children: \"View Full Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center min-w-max\",\n        children: displayData && /*#__PURE__*/_jsxDEV(MemberNode, {\n          member: displayData,\n          isRoot: true,\n          onSelect: handleSelectPerson,\n          selectedPersonName: selectedPersonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(OrgChart, \"rPM9H7x6D4+ssbOSehMoCiwAvCA=\");\n_c2 = OrgChart;\nexport default OrgChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemberNode\");\n$RefreshReg$(_c2, \"OrgChart\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","MemberNode","member","isRoot","onSelect","selectedPersonName","isSelected","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","team","length","map","child","_c","buildFilteredTree","node","selectedName","c","childResults","filter","Boolean","OrgChart","_s","setSelectedPersonName","handleSelectPerson","prev","orgData","displayData","_c2","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/company-setup/components/details/orgchart/OrgChart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../../../../../components/common/layout/Card';\n\nconst MemberNode = ({ member, isRoot = false, onSelect, selectedPersonName }) => {\n  const isSelected = member.name === selectedPersonName;\n\n  return (\n    <div className={`relative flex flex-col items-center ${isRoot ? '' : 'pt-8'}`}>\n      {/* Connecting line from parent */}\n      {!isRoot && <div className=\"absolute top-0 left-1/2 -translate-x-1/2 w-px h-8 bg-gray-300\"></div>}\n      \n      {/* Member Box */}\n      <button \n        onClick={() => onSelect(member.name)}\n        className={`relative block text-left bg-white border ${isSelected ? 'border-primary-500 ring-2 ring-primary-200' : 'border-gray-300'} rounded-md shadow-sm p-2 w-40 z-10 hover:border-primary-400 transition-all duration-150`}\n      >\n        <h3 className=\"text-sm font-bold text-gray-900 text-center\">{member.name}</h3>\n        <p className=\"text-xs text-primary-600 font-semibold text-center\">{member.role}</p>\n        <p className=\"text-xs text-gray-500 text-center mt-1\">{member.team}</p>\n      </button>\n      \n      {/* Render children if they exist */}\n      {member.children && member.children.length > 0 && (\n        <>\n          {/* Vertical line connecting to children's horizontal bar */}\n          <div className=\"absolute top-full w-px h-8 bg-gray-300\"></div>\n\n          <div className=\"flex justify-center mt-8 relative\">\n            {/* Horizontal connecting line - only if more than one child */}\n            {member.children.length > 1 && (\n              <div className=\"absolute top-0 left-0 right-0 h-px bg-gray-300\"></div>\n            )}\n            \n            {member.children.map((child) => (\n              <div key={child.name} className=\"px-2\">\n                <MemberNode member={child} onSelect={onSelect} selectedPersonName={selectedPersonName} />\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\n// Helper function to create a filtered tree showing the reporting line and direct reports\nconst buildFilteredTree = (node, selectedName) => {\n  // If this is the selected node, return it with its direct children\n  if (node.name === selectedName) {\n    // Return a copy of the node, ensuring children are included.\n    // We don't need to traverse deeper than the selected node's direct children.\n    return { ...node, children: node.children ? node.children.map(c => ({...c, children: []})) : [] };\n  }\n\n  // If this node has children, search them recursively\n  if (node.children) {\n    const childResults = node.children\n      .map(child => buildFilteredTree(child, selectedName))\n      .filter(Boolean); // Remove null results\n\n    // If a child path contains the selected node, this node is in the reporting line\n    if (childResults.length > 0) {\n      return { ...node, children: childResults };\n    }\n  }\n\n  // This node is not the selected one and not in its reporting line\n  return null;\n};\n\n\nconst OrgChart = () => {\n  const [selectedPersonName, setSelectedPersonName] = useState(null);\n\n  const handleSelectPerson = (name) => {\n    // Allow toggling selection\n    setSelectedPersonName(prev => prev === name ? null : name);\n  };\n\n  const orgData = {\n    name: 'Eleanor Vance',\n    role: 'CEO',\n    team: 'Executive',\n    children: [\n      {\n        name: 'Marcus Holloway',\n        role: 'CTO',\n        team: 'Technology',\n        children: [\n          {\n            name: 'Aiden Pearce',\n            role: 'Lead Engineer',\n            team: 'Engineering',\n            children: [\n                { name: 'Clara Lille', role: 'Frontend Dev', team: 'Engineering' },\n                { name: 'Raymond Kenney', role: 'Backend Dev', team: 'Engineering' },\n            ]\n          },\n          {\n            name: 'Javier Vega',\n            role: 'Head of Product',\n            team: 'Product',\n            children: [\n                { name: 'Sitara Dhawan', role: 'Product Manager', team: 'Product' },\n            ]\n          },\n        ],\n      },\n      {\n        name: 'Miranda Lawson',\n        role: 'COO',\n        team: 'Operations',\n        children: [\n          { name: 'Jacob Taylor', role: 'Ops Manager', team: 'Operations' },\n          { name: 'Kasumi Goto', role: 'HR Manager', team: 'Human Resources' },\n        ],\n      },\n    ],\n  };\n\n  const displayData = selectedPersonName ? buildFilteredTree(orgData, selectedPersonName) : orgData;\n\n  return (\n    <Card>\n      <div className=\"overflow-x-auto p-4\">\n        <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-xl font-bold text-gray-900\">Organization Chart</h2>\n            {selectedPersonName && (\n                <button \n                    onClick={() => setSelectedPersonName(null)}\n                    className=\"px-3 py-1 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200\"\n                >\n                    View Full Chart\n                </button>\n            )}\n        </div>\n        <div className=\"flex justify-center min-w-max\">\n          {displayData && <MemberNode member={displayData} isRoot={true} onSelect={handleSelectPerson} selectedPersonName={selectedPersonName} />}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default OrgChart; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhE,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM,GAAG,KAAK;EAAEC,QAAQ;EAAEC;AAAmB,CAAC,KAAK;EAC/E,MAAMC,UAAU,GAAGJ,MAAM,CAACK,IAAI,KAAKF,kBAAkB;EAErD,oBACEP,OAAA;IAAKU,SAAS,EAAE,uCAAuCL,MAAM,GAAG,EAAE,GAAG,MAAM,EAAG;IAAAM,QAAA,GAE3E,CAACN,MAAM,iBAAIL,OAAA;MAAKU,SAAS,EAAC;IAA+D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAGjGf,OAAA;MACEgB,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACF,MAAM,CAACK,IAAI,CAAE;MACrCC,SAAS,EAAE,4CAA4CF,UAAU,GAAG,4CAA4C,GAAG,iBAAiB,0FAA2F;MAAAG,QAAA,gBAE/NX,OAAA;QAAIU,SAAS,EAAC,6CAA6C;QAAAC,QAAA,EAAEP,MAAM,CAACK;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9Ef,OAAA;QAAGU,SAAS,EAAC,oDAAoD;QAAAC,QAAA,EAAEP,MAAM,CAACa;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnFf,OAAA;QAAGU,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAEP,MAAM,CAACc;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,EAGRX,MAAM,CAACO,QAAQ,IAAIP,MAAM,CAACO,QAAQ,CAACQ,MAAM,GAAG,CAAC,iBAC5CnB,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBAEEX,OAAA;QAAKU,SAAS,EAAC;MAAwC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE9Df,OAAA;QAAKU,SAAS,EAAC,mCAAmC;QAAAC,QAAA,GAE/CP,MAAM,CAACO,QAAQ,CAACQ,MAAM,GAAG,CAAC,iBACzBnB,OAAA;UAAKU,SAAS,EAAC;QAAgD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACtE,EAEAX,MAAM,CAACO,QAAQ,CAACS,GAAG,CAAEC,KAAK,iBACzBrB,OAAA;UAAsBU,SAAS,EAAC,MAAM;UAAAC,QAAA,eACpCX,OAAA,CAACG,UAAU;YAACC,MAAM,EAAEiB,KAAM;YAACf,QAAQ,EAAEA,QAAS;YAACC,kBAAkB,EAAEA;UAAmB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADjFM,KAAK,CAACZ,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAO,EAAA,GA1CMnB,UAAU;AA2ChB,MAAMoB,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,YAAY,KAAK;EAChD;EACA,IAAID,IAAI,CAACf,IAAI,KAAKgB,YAAY,EAAE;IAC9B;IACA;IACA,OAAO;MAAE,GAAGD,IAAI;MAAEb,QAAQ,EAAEa,IAAI,CAACb,QAAQ,GAAGa,IAAI,CAACb,QAAQ,CAACS,GAAG,CAACM,CAAC,KAAK;QAAC,GAAGA,CAAC;QAAEf,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC,GAAG;IAAG,CAAC;EACnG;;EAEA;EACA,IAAIa,IAAI,CAACb,QAAQ,EAAE;IACjB,MAAMgB,YAAY,GAAGH,IAAI,CAACb,QAAQ,CAC/BS,GAAG,CAACC,KAAK,IAAIE,iBAAiB,CAACF,KAAK,EAAEI,YAAY,CAAC,CAAC,CACpDG,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;;IAEpB;IACA,IAAIF,YAAY,CAACR,MAAM,GAAG,CAAC,EAAE;MAC3B,OAAO;QAAE,GAAGK,IAAI;QAAEb,QAAQ,EAAEgB;MAAa,CAAC;IAC5C;EACF;;EAEA;EACA,OAAO,IAAI;AACb,CAAC;AAGD,MAAMG,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACxB,kBAAkB,EAAEyB,qBAAqB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMoC,kBAAkB,GAAIxB,IAAI,IAAK;IACnC;IACAuB,qBAAqB,CAACE,IAAI,IAAIA,IAAI,KAAKzB,IAAI,GAAG,IAAI,GAAGA,IAAI,CAAC;EAC5D,CAAC;EAED,MAAM0B,OAAO,GAAG;IACd1B,IAAI,EAAE,eAAe;IACrBQ,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,WAAW;IACjBP,QAAQ,EAAE,CACR;MACEF,IAAI,EAAE,iBAAiB;MACvBQ,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,YAAY;MAClBP,QAAQ,EAAE,CACR;QACEF,IAAI,EAAE,cAAc;QACpBQ,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,aAAa;QACnBP,QAAQ,EAAE,CACN;UAAEF,IAAI,EAAE,aAAa;UAAEQ,IAAI,EAAE,cAAc;UAAEC,IAAI,EAAE;QAAc,CAAC,EAClE;UAAET,IAAI,EAAE,gBAAgB;UAAEQ,IAAI,EAAE,aAAa;UAAEC,IAAI,EAAE;QAAc,CAAC;MAE1E,CAAC,EACD;QACET,IAAI,EAAE,aAAa;QACnBQ,IAAI,EAAE,iBAAiB;QACvBC,IAAI,EAAE,SAAS;QACfP,QAAQ,EAAE,CACN;UAAEF,IAAI,EAAE,eAAe;UAAEQ,IAAI,EAAE,iBAAiB;UAAEC,IAAI,EAAE;QAAU,CAAC;MAEzE,CAAC;IAEL,CAAC,EACD;MACET,IAAI,EAAE,gBAAgB;MACtBQ,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,YAAY;MAClBP,QAAQ,EAAE,CACR;QAAEF,IAAI,EAAE,cAAc;QAAEQ,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAE;MAAa,CAAC,EACjE;QAAET,IAAI,EAAE,aAAa;QAAEQ,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAkB,CAAC;IAExE,CAAC;EAEL,CAAC;EAED,MAAMkB,WAAW,GAAG7B,kBAAkB,GAAGgB,iBAAiB,CAACY,OAAO,EAAE5B,kBAAkB,CAAC,GAAG4B,OAAO;EAEjG,oBACEnC,OAAA,CAACF,IAAI;IAAAa,QAAA,eACHX,OAAA;MAAKU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCX,OAAA;QAAKU,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACnDX,OAAA;UAAIU,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACtER,kBAAkB,iBACfP,OAAA;UACIgB,OAAO,EAAEA,CAAA,KAAMgB,qBAAqB,CAAC,IAAI,CAAE;UAC3CtB,SAAS,EAAC,6GAA6G;UAAAC,QAAA,EAC1H;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNf,OAAA;QAAKU,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAC3CyB,WAAW,iBAAIpC,OAAA,CAACG,UAAU;UAACC,MAAM,EAAEgC,WAAY;UAAC/B,MAAM,EAAE,IAAK;UAACC,QAAQ,EAAE2B,kBAAmB;UAAC1B,kBAAkB,EAAEA;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACgB,EAAA,CAvEID,QAAQ;AAAAO,GAAA,GAARP,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAAR,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}