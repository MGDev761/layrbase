{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/legal/components/Contracts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FolderIcon, DocumentTextIcon, MagnifyingGlassIcon, PlusIcon, ArrowUpTrayIcon, TrashIcon, EllipsisVerticalIcon, PencilSquareIcon, DocumentDuplicateIcon } from '@heroicons/react/24/outline';\nimport { getContracts, getContractFolders, deleteContract, createContractFolder, createContract, uploadContractPDF, debugRls, deleteContractFile, duplicateContract } from '../../../services/legalService';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport DropdownMenu from './DropdownMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contracts = () => {\n  _s();\n  const [contracts, setContracts] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [showFolderModal, setShowFolderModal] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const {\n    currentOrganization\n  } = useAuth();\n  const [showMoveToFolderModal, setShowMoveToFolderModal] = useState(false);\n  const [selectedContract, setSelectedContract] = useState(null);\n  useEffect(() => {\n    loadContracts();\n  }, [currentOrganization]);\n  const handleShowMoveToFolderModal = contract => {\n    setSelectedContract(contract);\n    setShowMoveToFolderModal(true);\n  };\n  const handleMoveContract = async newFolderId => {\n    if (!selectedContract) return;\n    setSaving(true);\n    try {\n      await updateContract(selectedContract.id, {\n        folder_id: newFolderId\n      });\n      await loadContracts();\n      setShowMoveToFolderModal(false);\n      setSelectedContract(null);\n    } catch (error) {\n      console.error(\"Error moving contract:\", error);\n      alert(\"Failed to move contract. Please try again.\");\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleDuplicateContract = async contract => {\n    if (!contract || !contract.id) return;\n    if (window.confirm(`Are you sure you want to duplicate the contract \"${contract.name}\"?`)) {\n      try {\n        await duplicateContract(contract.id);\n        await loadContracts(); // Refresh the list to show the new copy\n        alert('Contract duplicated successfully.');\n      } catch (error) {\n        console.error('Error duplicating contract:', error);\n        alert('Error duplicating contract. Please check the console for details.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MoveToFolderModal, {\n      show: showMoveToFolderModal,\n      onClose: () => setShowMoveToFolderModal(false),\n      onSave: handleMoveContract,\n      folders: folders,\n      saving: saving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Contracts, \"Xqsul9jzSE99kYHZn+MJVNQYWoI=\", false, function () {\n  return [useAuth];\n});\n_c = Contracts;\nconst MoveToFolderModal = ({\n  show,\n  onClose,\n  onSave,\n  folders,\n  saving\n}) => {\n  _s2();\n  const [selectedFolderId, setSelectedFolderId] = useState('');\n  useEffect(() => {\n    if (show) {\n      setSelectedFolderId('');\n    }\n  }, [show]);\n  const handleSave = () => {\n    onSave(selectedFolderId || null); // Send null if no folder is selected (to move out of folders)\n  };\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Move Contract to Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Select a new folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedFolderId,\n            onChange: e => setSelectedFolderId(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- None (Remove from folder) --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: folder.id,\n              children: folder.name\n            }, folder.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\",\n            disabled: saving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSave,\n            className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\",\n            disabled: saving,\n            children: saving ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(MoveToFolderModal, \"zL7nFHt9AoorZLGhPzjGXjZStCw=\");\n_c2 = MoveToFolderModal;\nconst UploadModal = ({\n  showModal,\n  onClose,\n  folders,\n  onUpload,\n  saving\n}) => {\n  _s3();\n  const [uploadData, setUploadData] = useState({\n    name: '',\n    description: '',\n    folderId: '',\n    file: null\n  });\n  // ... existing code ...\n};\n_s3(UploadModal, \"B9SAzq3NQE511MxTuZnqXsCZSPA=\");\n_c3 = UploadModal;\nexport default Contracts;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Contracts\");\n$RefreshReg$(_c2, \"MoveToFolderModal\");\n$RefreshReg$(_c3, \"UploadModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FolderIcon","DocumentTextIcon","MagnifyingGlassIcon","PlusIcon","ArrowUpTrayIcon","TrashIcon","EllipsisVerticalIcon","PencilSquareIcon","DocumentDuplicateIcon","getContracts","getContractFolders","deleteContract","createContractFolder","createContract","uploadContractPDF","debugRls","deleteContractFile","duplicateContract","useAuth","DropdownMenu","jsxDEV","_jsxDEV","Contracts","_s","contracts","setContracts","folders","setFolders","showUploadModal","setShowUploadModal","showFolderModal","setShowFolderModal","saving","setSaving","currentOrganization","showMoveToFolderModal","setShowMoveToFolderModal","selectedContract","setSelectedContract","loadContracts","handleShowMoveToFolderModal","contract","handleMoveContract","newFolderId","updateContract","id","folder_id","error","console","alert","handleDuplicateContract","window","confirm","name","children","MoveToFolderModal","show","onClose","onSave","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","selectedFolderId","setSelectedFolderId","handleSave","className","value","onChange","e","target","map","folder","type","onClick","disabled","_c2","UploadModal","showModal","onUpload","_s3","uploadData","setUploadData","description","folderId","file","_c3","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/legal/components/Contracts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FolderIcon, DocumentTextIcon, MagnifyingGlassIcon, PlusIcon, ArrowUpTrayIcon, TrashIcon, EllipsisVerticalIcon, PencilSquareIcon, DocumentDuplicateIcon } from '@heroicons/react/24/outline';\nimport { getContracts, getContractFolders, deleteContract, createContractFolder, createContract, uploadContractPDF, debugRls, deleteContractFile, duplicateContract } from '../../../services/legalService';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport DropdownMenu from './DropdownMenu';\n\nconst Contracts = () => {\n  const [contracts, setContracts] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [showFolderModal, setShowFolderModal] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const { currentOrganization } = useAuth();\n  const [showMoveToFolderModal, setShowMoveToFolderModal] = useState(false);\n  const [selectedContract, setSelectedContract] = useState(null);\n\n  useEffect(() => {\n    loadContracts();\n  }, [currentOrganization]);\n\n  const handleShowMoveToFolderModal = (contract) => {\n    setSelectedContract(contract);\n    setShowMoveToFolderModal(true);\n  };\n\n  const handleMoveContract = async (newFolderId) => {\n    if (!selectedContract) return;\n\n    setSaving(true);\n    try {\n      await updateContract(selectedContract.id, { folder_id: newFolderId });\n      await loadContracts();\n      setShowMoveToFolderModal(false);\n      setSelectedContract(null);\n    } catch (error) {\n      console.error(\"Error moving contract:\", error);\n      alert(\"Failed to move contract. Please try again.\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleDuplicateContract = async (contract) => {\n    if (!contract || !contract.id) return;\n    if (window.confirm(`Are you sure you want to duplicate the contract \"${contract.name}\"?`)) {\n      try {\n        await duplicateContract(contract.id);\n        await loadContracts(); // Refresh the list to show the new copy\n        alert('Contract duplicated successfully.');\n      } catch (error) {\n        console.error('Error duplicating contract:', error);\n        alert('Error duplicating contract. Please check the console for details.');\n      }\n    }\n  };\n\n  return (\n    <div>\n      {/* ... existing code ... */}\n      <MoveToFolderModal\n        show={showMoveToFolderModal}\n        onClose={() => setShowMoveToFolderModal(false)}\n        onSave={handleMoveContract}\n        folders={folders}\n        saving={saving}\n      />\n    </div>\n  );\n};\n\nconst MoveToFolderModal = ({ show, onClose, onSave, folders, saving }) => {\n  const [selectedFolderId, setSelectedFolderId] = useState('');\n\n  useEffect(() => {\n    if (show) {\n      setSelectedFolderId('');\n    }\n  }, [show]);\n\n  const handleSave = () => {\n    onSave(selectedFolderId || null); // Send null if no folder is selected (to move out of folders)\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Move Contract to Folder</h3>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select a new folder</label>\n            <select\n              value={selectedFolderId}\n              onChange={(e) => setSelectedFolderId(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">-- None (Remove from folder) --</option>\n              {folders.map(folder => (\n                <option key={folder.id} value={folder.id}>{folder.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex justify-end space-x-3\">\n            <button type=\"button\" onClick={onClose} className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\" disabled={saving}>\n              Cancel\n            </button>\n            <button type=\"button\" onClick={handleSave} className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\" disabled={saving}>\n              {saving ? 'Saving...' : 'Save'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst UploadModal = ({ showModal, onClose, folders, onUpload, saving }) => {\n  const [uploadData, setUploadData] = useState({ name: '', description: '', folderId: '', file: null });\n  // ... existing code ...\n};\n\nexport default Contracts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}