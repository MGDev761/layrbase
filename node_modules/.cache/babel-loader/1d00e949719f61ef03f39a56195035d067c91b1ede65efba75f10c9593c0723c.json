{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/pl/ProfitLoss.js\";\nimport React from 'react';\nimport Card from '../../../../components/common/layout/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLItem = ({\n  label,\n  amount,\n  isTotal = false,\n  isNegative = false\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"flex justify-between items-center py-2 border-b\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: `${isTotal ? 'font-medium' : ''}`,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `font-semibold ${isNegative ? 'text-red-600' : 'text-green-600'} ${isTotal ? 'text-lg' : ''}`,\n    children: amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = PLItem;\nconst ProfitLoss = () => {\n  const plItems = [{\n    label: 'Revenue',\n    amount: '$2,400,000'\n  }, {\n    label: 'Cost of Goods Sold',\n    amount: '-$1,200,000',\n    isNegative: true\n  }, {\n    label: 'Gross Profit',\n    amount: '$1,200,000',\n    isTotal: true\n  }, {\n    label: 'Operating Expenses',\n    amount: '-$800,000',\n    isNegative: true\n  }, {\n    label: 'Operating Income',\n    amount: '$400,000',\n    isTotal: true\n  }, {\n    label: 'Net Income',\n    amount: '$400,000',\n    isTotal: true\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: plItems.map((item, index) => /*#__PURE__*/_jsxDEV(PLItem, {\n        ...item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ProfitLoss;\nexport default ProfitLoss;\nvar _c, _c2;\n$RefreshReg$(_c, \"PLItem\");\n$RefreshReg$(_c2, \"ProfitLoss\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","PLItem","label","amount","isTotal","isNegative","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProfitLoss","plItems","map","item","index","_c2","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/finance/components/pl/ProfitLoss.js"],"sourcesContent":["import React from 'react';\nimport Card from '../../../../components/common/layout/Card';\n\nconst PLItem = ({ label, amount, isTotal = false, isNegative = false }) => (\n  <div className=\"flex justify-between items-center py-2 border-b\">\n    <span className={`${isTotal ? 'font-medium' : ''}`}>{label}</span>\n    <span className={`font-semibold ${isNegative ? 'text-red-600' : 'text-green-600'} ${isTotal ? 'text-lg' : ''}`}>\n      {amount}\n    </span>\n  </div>\n);\n\nconst ProfitLoss = () => {\n  const plItems = [\n    { label: 'Revenue', amount: '$2,400,000' },\n    { label: 'Cost of Goods Sold', amount: '-$1,200,000', isNegative: true },\n    { label: 'Gross Profit', amount: '$1,200,000', isTotal: true },\n    { label: 'Operating Expenses', amount: '-$800,000', isNegative: true },\n    { label: 'Operating Income', amount: '$400,000', isTotal: true },\n    { label: 'Net Income', amount: '$400,000', isTotal: true }\n  ];\n\n  return (\n    <Card>\n      <div className=\"space-y-4\">\n        {plItems.map((item, index) => (\n          <PLItem key={index} {...item} />\n        ))}\n      </div>\n    </Card>\n  );\n};\n\nexport default ProfitLoss; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,OAAO,GAAG,KAAK;EAAEC,UAAU,GAAG;AAAM,CAAC,kBACpEL,OAAA;EAAKM,SAAS,EAAC,iDAAiD;EAAAC,QAAA,gBAC9DP,OAAA;IAAMM,SAAS,EAAE,GAAGF,OAAO,GAAG,aAAa,GAAG,EAAE,EAAG;IAAAG,QAAA,EAAEL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC,eAClEX,OAAA;IAAMM,SAAS,EAAE,iBAAiBD,UAAU,GAAG,cAAc,GAAG,gBAAgB,IAAID,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAG,QAAA,EAC5GJ;EAAM;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CACN;AAACC,EAAA,GAPIX,MAAM;AASZ,MAAMY,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,OAAO,GAAG,CACd;IAAEZ,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAa,CAAC,EAC1C;IAAED,KAAK,EAAE,oBAAoB;IAAEC,MAAM,EAAE,aAAa;IAAEE,UAAU,EAAE;EAAK,CAAC,EACxE;IAAEH,KAAK,EAAE,cAAc;IAAEC,MAAM,EAAE,YAAY;IAAEC,OAAO,EAAE;EAAK,CAAC,EAC9D;IAAEF,KAAK,EAAE,oBAAoB;IAAEC,MAAM,EAAE,WAAW;IAAEE,UAAU,EAAE;EAAK,CAAC,EACtE;IAAEH,KAAK,EAAE,kBAAkB;IAAEC,MAAM,EAAE,UAAU;IAAEC,OAAO,EAAE;EAAK,CAAC,EAChE;IAAEF,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE,UAAU;IAAEC,OAAO,EAAE;EAAK,CAAC,CAC3D;EAED,oBACEJ,OAAA,CAACF,IAAI;IAAAS,QAAA,eACHP,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBO,OAAO,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBjB,OAAA,CAACC,MAAM;QAAA,GAAiBe;MAAI,GAAfC,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACO,GAAA,GAnBIL,UAAU;AAqBhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}