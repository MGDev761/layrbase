{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/dashboard/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CompanyProfile from './components/CompanyProfile';\nimport SectionCompletion from './components/SectionCompletion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Company Profile State\n  const [companyName, setCompanyName] = useState('Acme Inc.');\n  const [companyWebsite, setCompanyWebsite] = useState('acme.com');\n  const [companyLinkedin, setCompanyLinkedin] = useState('acme');\n  const [logoUrl, setLogoUrl] = useState('');\n\n  // Mock data - in a real app this would come from your backend\n  const sectionProgress = [{\n    name: 'Company Setup',\n    progress: 85,\n    color: 'bg-teal-500'\n  }, {\n    name: 'Finance',\n    progress: 60,\n    color: 'bg-pink-500'\n  }, {\n    name: 'Cap Table',\n    progress: 45,\n    color: 'bg-purple-500'\n  }, {\n    name: 'Marketing',\n    progress: 30,\n    color: 'bg-lime-500'\n  }, {\n    name: 'HR',\n    progress: 20,\n    color: 'bg-gray-500'\n  }];\n  const handleLogoUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setLogoUrl(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(CompanyProfile, {\n          companyName: companyName,\n          companyWebsite: companyWebsite,\n          companyLinkedin: companyLinkedin,\n          logoUrl: logoUrl,\n          onLogoUpload: handleLogoUpload,\n          onCompanyNameChange: setCompanyName,\n          onWebsiteChange: setCompanyWebsite,\n          onLinkedinChange: setCompanyLinkedin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80\",\n        children: /*#__PURE__*/_jsxDEV(SectionCompletion, {\n          sections: sectionProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"siXAHJPvq65uj2XaxuQYEOSZ4p0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CompanyProfile","SectionCompletion","jsxDEV","_jsxDEV","Dashboard","_s","companyName","setCompanyName","companyWebsite","setCompanyWebsite","companyLinkedin","setCompanyLinkedin","logoUrl","setLogoUrl","sectionProgress","name","progress","color","handleLogoUpload","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","className","children","onLogoUpload","onCompanyNameChange","onWebsiteChange","onLinkedinChange","fileName","_jsxFileName","lineNumber","columnNumber","sections","_c","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/dashboard/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CompanyProfile from './components/CompanyProfile';\nimport SectionCompletion from './components/SectionCompletion';\n\nconst Dashboard = () => {\n  // Company Profile State\n  const [companyName, setCompanyName] = useState('Acme Inc.');\n  const [companyWebsite, setCompanyWebsite] = useState('acme.com');\n  const [companyLinkedin, setCompanyLinkedin] = useState('acme');\n  const [logoUrl, setLogoUrl] = useState('');\n\n  // Mock data - in a real app this would come from your backend\n  const sectionProgress = [\n    { name: 'Company Setup', progress: 85, color: 'bg-teal-500' },\n    { name: 'Finance', progress: 60, color: 'bg-pink-500' },\n    { name: 'Cap Table', progress: 45, color: 'bg-purple-500' },\n    { name: 'Marketing', progress: 30, color: 'bg-lime-500' },\n    { name: 'HR', progress: 20, color: 'bg-gray-500' },\n  ];\n\n  const handleLogoUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setLogoUrl(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex gap-6\">\n        <div className=\"flex-1\">\n          <CompanyProfile\n            companyName={companyName}\n            companyWebsite={companyWebsite}\n            companyLinkedin={companyLinkedin}\n            logoUrl={logoUrl}\n            onLogoUpload={handleLogoUpload}\n            onCompanyNameChange={setCompanyName}\n            onWebsiteChange={setCompanyWebsite}\n            onLinkedinChange={setCompanyLinkedin}\n          />\n        </div>\n        <div className=\"w-80\">\n          <SectionCompletion sections={sectionProgress} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}