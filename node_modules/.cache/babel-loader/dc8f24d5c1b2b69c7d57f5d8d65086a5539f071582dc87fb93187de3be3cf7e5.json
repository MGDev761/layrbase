{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/legal/components/Contracts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FolderIcon, DocumentTextIcon, MagnifyingGlassIcon, PlusIcon, ArrowUpTrayIcon, TrashIcon, EllipsisVerticalIcon, PencilSquareIcon, DocumentDuplicateIcon } from '@heroicons/react/24/outline';\nimport { getContracts, getContractFolders, deleteContract, createContractFolder, createContract, uploadContractPDF, debugRls, deleteContractFile, duplicateContract, updateContract } from '../../../services/legalService';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownMenu = ({\n  contract,\n  onEdit,\n  onDelete,\n  onDuplicate\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  // ... existing code ...\n};\n_s(DropdownMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DropdownMenu;\nconst Contracts = () => {\n  _s2();\n  const [contracts, setContracts] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [showFolderModal, setShowFolderModal] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const {\n    currentOrganization\n  } = useAuth();\n  const [showMoveToFolderModal, setShowMoveToFolderModal] = useState(false);\n  const [selectedContract, setSelectedContract] = useState(null);\n  useEffect(() => {\n    if (currentOrganization) {\n      loadContracts();\n      loadFolders();\n    }\n  }, [currentOrganization]);\n  const loadContracts = async () => {\n    setSaving(true);\n    try {\n      if (!currentOrganization) return;\n      const data = await getContracts(currentOrganization.organization_id);\n      setContracts(data);\n    } catch (error) {\n      console.error('Error loading contracts:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n  const loadFolders = async () => {\n    try {\n      if (!currentOrganization) return;\n      const data = await getContractFolders(currentOrganization.organization_id);\n      setFolders(data);\n    } catch (error) {\n      console.error('Error loading folders:', error);\n    }\n  };\n  const handleDeleteContract = async contract => {\n    if (!contract || !contract.id) return;\n    if (window.confirm(`Are you sure you want to delete the contract \"${contract.name}\"?`)) {\n      try {\n        if (contract.pdf_file_path) {\n          await deleteContractFile(contract.pdf_file_path);\n        }\n        await deleteContract(contract.id);\n        await loadContracts();\n        alert('Contract deleted successfully.');\n      } catch (error) {\n        console.error('Error deleting contract:', error);\n        alert('Error deleting contract. Please check the console for details.');\n      }\n    }\n  };\n  const handleDuplicateContract = async contract => {\n    if (!contract || !contract.id) return;\n    if (window.confirm(`Are you sure you want to duplicate the contract \"${contract.name}\"?`)) {\n      try {\n        await duplicateContract(contract.id);\n        await loadContracts(); // Refresh the list to show the new copy\n        alert('Contract duplicated successfully.');\n      } catch (error) {\n        console.error('Error duplicating contract:', error);\n        alert('Error duplicating contract. Please check the console for details.');\n      }\n    }\n  };\n  const handleUploadContract = async uploadData => {\n    if (!uploadData.name || !uploadData.file) {\n      alert('Please fill in the contract name and select a file');\n      return;\n    }\n    // ... existing code ...\n  };\n  const handleShowMoveToFolderModal = contract => {\n    setSelectedContract(contract);\n    setShowMoveToFolderModal(true);\n  };\n  const handleMoveContract = async newFolderId => {\n    if (!selectedContract) return;\n    setSaving(true);\n    try {\n      await updateContract(selectedContract.id, {\n        folder_id: newFolderId\n      });\n      await loadContracts();\n      setShowMoveToFolderModal(false);\n      setSelectedContract(null);\n    } catch (error) {\n      console.error(\"Error moving contract:\", error);\n      alert(\"Failed to move contract. Please try again.\");\n    } finally {\n      setSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MoveToFolderModal, {\n      show: showMoveToFolderModal,\n      onClose: () => setShowMoveToFolderModal(false),\n      onSave: handleMoveContract,\n      folders: folders,\n      saving: saving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s2(Contracts, \"Xqsul9jzSE99kYHZn+MJVNQYWoI=\", false, function () {\n  return [useAuth];\n});\n_c2 = Contracts;\nconst MoveToFolderModal = ({\n  show,\n  onClose,\n  onSave,\n  folders,\n  saving\n}) => {\n  _s3();\n  const [selectedFolderId, setSelectedFolderId] = useState('');\n  useEffect(() => {\n    if (show) {\n      setSelectedFolderId('');\n    }\n  }, [show]);\n  const handleSave = () => {\n    onSave(selectedFolderId || null); // Send null if no folder is selected (to move out of folders)\n  };\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Move Contract to Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Select a new folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedFolderId,\n            onChange: e => setSelectedFolderId(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- None (Remove from folder) --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: folder.id,\n              children: folder.name\n            }, folder.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\",\n            disabled: saving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSave,\n            className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\",\n            disabled: saving,\n            children: saving ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s3(MoveToFolderModal, \"zL7nFHt9AoorZLGhPzjGXjZStCw=\");\n_c3 = MoveToFolderModal;\nconst UploadModal = ({\n  showModal,\n  onClose,\n  folders,\n  onUpload,\n  saving\n}) => {\n  _s4();\n  const [uploadData, setUploadData] = useState({\n    name: '',\n    description: '',\n    folderId: '',\n    file: null\n  });\n  // ... existing code ...\n};\n_s4(UploadModal, \"B9SAzq3NQE511MxTuZnqXsCZSPA=\");\n_c4 = UploadModal;\nexport default Contracts;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DropdownMenu\");\n$RefreshReg$(_c2, \"Contracts\");\n$RefreshReg$(_c3, \"MoveToFolderModal\");\n$RefreshReg$(_c4, \"UploadModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FolderIcon","DocumentTextIcon","MagnifyingGlassIcon","PlusIcon","ArrowUpTrayIcon","TrashIcon","EllipsisVerticalIcon","PencilSquareIcon","DocumentDuplicateIcon","getContracts","getContractFolders","deleteContract","createContractFolder","createContract","uploadContractPDF","debugRls","deleteContractFile","duplicateContract","updateContract","useAuth","jsxDEV","_jsxDEV","DropdownMenu","contract","onEdit","onDelete","onDuplicate","_s","isOpen","setIsOpen","_c","Contracts","_s2","contracts","setContracts","folders","setFolders","showUploadModal","setShowUploadModal","showFolderModal","setShowFolderModal","saving","setSaving","currentOrganization","showMoveToFolderModal","setShowMoveToFolderModal","selectedContract","setSelectedContract","loadContracts","loadFolders","data","organization_id","error","console","handleDeleteContract","id","window","confirm","name","pdf_file_path","alert","handleDuplicateContract","handleUploadContract","uploadData","file","handleShowMoveToFolderModal","handleMoveContract","newFolderId","folder_id","children","MoveToFolderModal","show","onClose","onSave","fileName","_jsxFileName","lineNumber","columnNumber","_c2","_s3","selectedFolderId","setSelectedFolderId","handleSave","className","value","onChange","e","target","map","folder","type","onClick","disabled","_c3","UploadModal","showModal","onUpload","_s4","setUploadData","description","folderId","_c4","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/legal/components/Contracts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FolderIcon, DocumentTextIcon, MagnifyingGlassIcon, PlusIcon, ArrowUpTrayIcon, TrashIcon, EllipsisVerticalIcon, PencilSquareIcon, DocumentDuplicateIcon } from '@heroicons/react/24/outline';\nimport { getContracts, getContractFolders, deleteContract, createContractFolder, createContract, uploadContractPDF, debugRls, deleteContractFile, duplicateContract, updateContract } from '../../../services/legalService';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst DropdownMenu = ({ contract, onEdit, onDelete, onDuplicate }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // ... existing code ...\n};\n\nconst Contracts = () => {\n  const [contracts, setContracts] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [showFolderModal, setShowFolderModal] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const { currentOrganization } = useAuth();\n  const [showMoveToFolderModal, setShowMoveToFolderModal] = useState(false);\n  const [selectedContract, setSelectedContract] = useState(null);\n\n  useEffect(() => {\n    if (currentOrganization) {\n      loadContracts();\n      loadFolders();\n    }\n  }, [currentOrganization]);\n\n  const loadContracts = async () => {\n    setSaving(true);\n    try {\n      if (!currentOrganization) return;\n      const data = await getContracts(currentOrganization.organization_id);\n      setContracts(data);\n    } catch (error) {\n      console.error('Error loading contracts:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const loadFolders = async () => {\n    try {\n      if (!currentOrganization) return;\n      const data = await getContractFolders(currentOrganization.organization_id);\n      setFolders(data);\n    } catch (error) {\n      console.error('Error loading folders:', error);\n    }\n  };\n\n  const handleDeleteContract = async (contract) => {\n    if (!contract || !contract.id) return;\n    if (window.confirm(`Are you sure you want to delete the contract \"${contract.name}\"?`)) {\n      try {\n        if (contract.pdf_file_path) {\n          await deleteContractFile(contract.pdf_file_path);\n        }\n        await deleteContract(contract.id);\n        await loadContracts();\n        alert('Contract deleted successfully.');\n      } catch (error) {\n        console.error('Error deleting contract:', error);\n        alert('Error deleting contract. Please check the console for details.');\n      }\n    }\n  };\n\n  const handleDuplicateContract = async (contract) => {\n    if (!contract || !contract.id) return;\n    if (window.confirm(`Are you sure you want to duplicate the contract \"${contract.name}\"?`)) {\n      try {\n        await duplicateContract(contract.id);\n        await loadContracts(); // Refresh the list to show the new copy\n        alert('Contract duplicated successfully.');\n      } catch (error) {\n        console.error('Error duplicating contract:', error);\n        alert('Error duplicating contract. Please check the console for details.');\n      }\n    }\n  };\n\n  const handleUploadContract = async (uploadData) => {\n    if (!uploadData.name || !uploadData.file) {\n      alert('Please fill in the contract name and select a file');\n      return;\n    }\n    // ... existing code ...\n  };\n\n  const handleShowMoveToFolderModal = (contract) => {\n    setSelectedContract(contract);\n    setShowMoveToFolderModal(true);\n  };\n\n  const handleMoveContract = async (newFolderId) => {\n    if (!selectedContract) return;\n\n    setSaving(true);\n    try {\n      await updateContract(selectedContract.id, { folder_id: newFolderId });\n      await loadContracts();\n      setShowMoveToFolderModal(false);\n      setSelectedContract(null);\n    } catch (error) {\n      console.error(\"Error moving contract:\", error);\n      alert(\"Failed to move contract. Please try again.\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <div>\n      {/* ... existing code ... */}\n      <MoveToFolderModal\n        show={showMoveToFolderModal}\n        onClose={() => setShowMoveToFolderModal(false)}\n        onSave={handleMoveContract}\n        folders={folders}\n        saving={saving}\n      />\n    </div>\n  );\n};\n\nconst MoveToFolderModal = ({ show, onClose, onSave, folders, saving }) => {\n  const [selectedFolderId, setSelectedFolderId] = useState('');\n\n  useEffect(() => {\n    if (show) {\n      setSelectedFolderId('');\n    }\n  }, [show]);\n\n  const handleSave = () => {\n    onSave(selectedFolderId || null); // Send null if no folder is selected (to move out of folders)\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Move Contract to Folder</h3>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select a new folder</label>\n            <select\n              value={selectedFolderId}\n              onChange={(e) => setSelectedFolderId(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">-- None (Remove from folder) --</option>\n              {folders.map(folder => (\n                <option key={folder.id} value={folder.id}>{folder.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex justify-end space-x-3\">\n            <button type=\"button\" onClick={onClose} className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\" disabled={saving}>\n              Cancel\n            </button>\n            <button type=\"button\" onClick={handleSave} className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\" disabled={saving}>\n              {saving ? 'Saving...' : 'Save'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst UploadModal = ({ showModal, onClose, folders, onUpload, saving }) => {\n  const [uploadData, setUploadData] = useState({ name: '', description: '', folderId: '', file: null });\n  // ... existing code ...\n};\n\nexport default Contracts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}