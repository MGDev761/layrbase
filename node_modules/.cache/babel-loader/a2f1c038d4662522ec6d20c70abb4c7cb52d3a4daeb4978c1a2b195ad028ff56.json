{"ast":null,"code":"var _jsxFileName = \"/Users/markgiblin/Desktop/layrbase/src/pages/company-setup/components/details/orgchart/OrgChart.js\";\nimport React from 'react';\nimport Card from '../../../../../components/common/layout/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemberNode = ({\n  member,\n  isRoot = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative flex flex-col items-center ${isRoot ? '' : 'pt-10'}`,\n    children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-1/2 w-px h-10 bg-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-white border border-gray-200 rounded-lg shadow-sm p-3 w-48 z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-base font-bold text-gray-800 text-center\",\n        children: member.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-primary-600 font-semibold text-center\",\n        children: member.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 text-center mt-1\",\n        children: member.team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), member.children && member.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-10 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-1/2 transform -translate-x-1/2 h-px bg-gray-300\",\n        style: {\n          width: `calc(100% - 3rem)`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), member.children.map((child, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-3\",\n        children: /*#__PURE__*/_jsxDEV(MemberNode, {\n          member: child\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = MemberNode;\nconst OrgChart = () => {\n  const orgData = {\n    name: 'Eleanor Vance',\n    role: 'CEO',\n    team: 'Executive',\n    children: [{\n      name: 'Marcus Holloway',\n      role: 'CTO',\n      team: 'Technology',\n      children: [{\n        name: 'Aiden Pearce',\n        role: 'Lead Engineer',\n        team: 'Engineering',\n        children: [{\n          name: 'Clara Lille',\n          role: 'Frontend Dev',\n          team: 'Engineering'\n        }, {\n          name: 'Raymond Kenney',\n          role: 'Backend Dev',\n          team: 'Engineering'\n        }]\n      }, {\n        name: 'Javier Vega',\n        role: 'Head of Product',\n        team: 'Product',\n        children: [{\n          name: 'Sitara Dhawan',\n          role: 'Product Manager',\n          team: 'Product'\n        }]\n      }]\n    }, {\n      name: 'Miranda Lawson',\n      role: 'COO',\n      team: 'Operations',\n      children: [{\n        name: 'Jacob Taylor',\n        role: 'Ops Manager',\n        team: 'Operations'\n      }, {\n        name: 'Kasumi Goto',\n        role: 'HR Manager',\n        team: 'Human Resources'\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-gray-900 text-center mb-8\",\n        children: \"Organization Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(MemberNode, {\n          member: orgData,\n          isRoot: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c2 = OrgChart;\nexport default OrgChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemberNode\");\n$RefreshReg$(_c2, \"OrgChart\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","MemberNode","member","isRoot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","role","team","length","style","width","map","child","index","_c","OrgChart","orgData","_c2","$RefreshReg$"],"sources":["/Users/markgiblin/Desktop/layrbase/src/pages/company-setup/components/details/orgchart/OrgChart.js"],"sourcesContent":["import React from 'react';\nimport Card from '../../../../../components/common/layout/Card';\n\nconst MemberNode = ({ member, isRoot = false }) => {\n  return (\n    <div className={`relative flex flex-col items-center ${isRoot ? '' : 'pt-10'}`}>\n      {/* Connecting line (not for root) */}\n      {!isRoot && <div className=\"absolute top-0 left-1/2 w-px h-10 bg-gray-300\"></div>}\n      \n      {/* Member Box */}\n      <div className=\"relative bg-white border border-gray-200 rounded-lg shadow-sm p-3 w-48 z-10\">\n        <h3 className=\"text-base font-bold text-gray-800 text-center\">{member.name}</h3>\n        <p className=\"text-sm text-primary-600 font-semibold text-center\">{member.role}</p>\n        <p className=\"text-xs text-gray-500 text-center mt-1\">{member.team}</p>\n      </div>\n      \n      {/* Render children if they exist */}\n      {member.children && member.children.length > 0 && (\n        <div className=\"flex justify-center mt-10 relative\">\n          {/* Horizontal connecting line */}\n          <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 h-px bg-gray-300\" style={{ width: `calc(100% - 3rem)` }}></div>\n          {member.children.map((child, index) => (\n            <div key={index} className=\"px-3\">\n              <MemberNode member={child} />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst OrgChart = () => {\n  const orgData = {\n    name: 'Eleanor Vance',\n    role: 'CEO',\n    team: 'Executive',\n    children: [\n      {\n        name: 'Marcus Holloway',\n        role: 'CTO',\n        team: 'Technology',\n        children: [\n          {\n            name: 'Aiden Pearce',\n            role: 'Lead Engineer',\n            team: 'Engineering',\n            children: [\n                { name: 'Clara Lille', role: 'Frontend Dev', team: 'Engineering' },\n                { name: 'Raymond Kenney', role: 'Backend Dev', team: 'Engineering' },\n            ]\n          },\n          {\n            name: 'Javier Vega',\n            role: 'Head of Product',\n            team: 'Product',\n            children: [\n                { name: 'Sitara Dhawan', role: 'Product Manager', team: 'Product' },\n            ]\n          },\n        ],\n      },\n      {\n        name: 'Miranda Lawson',\n        role: 'COO',\n        team: 'Operations',\n        children: [\n          { name: 'Jacob Taylor', role: 'Ops Manager', team: 'Operations' },\n          { name: 'Kasumi Goto', role: 'HR Manager', team: 'Human Resources' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Card>\n      <div className=\"overflow-x-auto p-4\">\n        <h2 className=\"text-xl font-bold text-gray-900 text-center mb-8\">Organization Chart</h2>\n        <div className=\"flex justify-center\">\n          <MemberNode member={orgData} isRoot={true} />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default OrgChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}